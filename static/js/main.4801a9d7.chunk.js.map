{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Navbar.js","components/NavDrawer.js","components/Table.js","dummyData/dummyHeartRate.js","dummyData/dummyPatientData.js","components/pages/patient/PatientLister.js","components/pages/patient/PatientAdd.js","components/pages/doctor/UpdateProfileForm.js","hooks/useForm.js","components/pages/doctor/DoctorProfile.js","dummyData/dummyECGData.js","components/ResponsiveLine.js","components/Tabs.js","components/pages/doctor/DoctorUpdate.js","components/pages/dashboard/DashboardAnayltics.js","components/pages/patient/PatientAlerts.js","components/pages/patient/PatientView.js","components/Canvas.js","components/Dashboard.js","components/PrivateRoute.js","components/pages/login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","auth","firestore","AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","email","password","meta","a","createUserWithEmailAndPassword","createUserRef","userUid","user","uid","collection","doc","set","console","log","alert","inviteId","v4","toString","replaceAll","inviteExpiry","Date","now","firestoreInvExp","Timestamp","fromDate","doctorId","validUntil","value","signUp","createInvite","login","signInWithEmailAndPassword","logout","signOut","updateDisplayName","displayName","updateProfile","updatePassword","sendPasswordResetEmail","useEffect","onAuthStateChanged","Provider","useStyles","makeStyles","theme","appBar","zIndex","drawer","backgroundColor","fontWeight","icon","marginRight","color","Navbar","classes","AppBar","position","className","Toolbar","Grid","justify","container","Typography","variant","noWrap","Box","display","alignItems","onClick","width","flexShrink","drawerPaper","drawerContainer","overflow","nested","paddingLeft","spacing","NavDrawer","React","patientOpen","setPatientOpen","profileOpen","setProfileOpen","Drawer","paper","List","component","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","table","minWidth","BasicTable","header","rows","history","useHistory","TableContainer","Paper","Table","TableHead","TableRow","map","column","TableCell","align","style","title","field","TableBody","row","key","push","pathname","state","onRowClick","hover","PatientLister","tableData","setTableData","tempData","get","then","querySnapshot","forEach","data","content","flexGrow","padding","root","height","justifyContent","flexDirection","paddingTop","textAlign","fontSize","qrCode","sub","spinner","PatientAdd","src","setSrc","doctorIdDoc","qrtext","QRCode","toDataURL","CircularProgress","UpdateProfileForm","props","id","formId","form","noValidate","onSubmit","handleSubmitWithCleanup","item","xs","TextField","required","onChange","handleInputChange","inputs","givenName","name","textfield","autoComplete","fullWidth","size","InputLabelProps","shrink","familyName","dob","type","gender","placeOfPractice","useForm","callback","setInputs","handleSubmit","event","preventDefault","persist","target","handleCheckboxChange","checked","palette","text","secondary","FORM_ID","ProfileTable","fields","doctorProfileInfo","UpdateProfileButton","Button","float","EditProfileButtons","submit","DoctorProfile","useLocation","setDoctorProfileInfo","setError","editMode","setEditMode","updateProfileInputs","setUpdateProfileInputs","updateProfileHandleInputChange","updateProfileHandleCheckboxChange","updateProfileHandleSubmit","userDataDoc","userData","toDate","toISOString","substring","MyResponsiveLine","formattedData","val","x","y","marginTop","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","axisBottom","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","pointSize","pointColor","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","legends","heartrate","i","Math","round","random","TabPanel","index","other","role","hidden","background","SimpleTabs","headers","setValue","Tabs","newValue","Tab","label","alertType","date","ResponsiveLine","dummyECGData","dummyHeartRate","initialDoctorProfile","setInitialDoctorProfile","DashboardAnayltics","PatientAlerts","Canvas","exact","path","PatientView","DoctorUpdate","overflowY","Dashboard","CssBaseline","PrivateRoute","Component","rest","render","image","backgroundRepeat","backgroundSize","backgroundPosition","paperbase","opacity","borderRadius","LoginForm","placeholder","FormControlLabel","control","Checkbox","rememberMe","styles","href","showRecoverPassword","showSignupForm","SignupForm","confirmPassword","ForgetPasswordForm","sendPwResetEmail","Login","signUpInputs","errorCode","code","errorMessage","message","showLoginForm","signUpHandleInputChange","signUpHandleCheckboxChange","signUpHandleSubmit","error","info","setInfo","formShown","setFormShown","cleanUp","res","sm","md","elevation","square","Alert","severity","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4801a9d7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n//import \"firebase/analytics\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n});\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n//export const analytics = firebase.analytics();\n","import { useContext, createContext, useState, useEffect } from 'react'\nimport { firestore, auth } from '../firebase'\nimport { v4 } from 'uuid';\nimport firebase from \"firebase/app\";\n\nconst AuthContext = createContext(null)\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport const AuthProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null); //holds info about current user\n    const [loading, setLoading] = useState(true)\n\n    async function signUp(email, password, meta) {\n        try {\n            const createUserRef = await auth.createUserWithEmailAndPassword(email, password);\n            // Get user UID and make doctor profile\n            const userUid = createUserRef?.user?.uid;\n            const createDoctorProfileRef = await firestore.collection(\"doctors\").doc(userUid).set(meta);\n        } catch(e) {\n            console.log(e);\n            alert(e);\n        }\n\n    }\n\n    async function createInvite() {\n        // Creates inviteId using UUID library\n        var inviteId = v4();\n        inviteId = inviteId.toString().replaceAll(\"-\", \"\");\n        // Sets expiration date\n        var inviteExpiry = new Date(Date.now() + (3600 * 1000 * 24)); // 24 hours \n        const firestoreInvExp = firebase.firestore.Timestamp.fromDate(inviteExpiry);\n        try {\n            const doctorId = currentUser.uid;\n\n            await firestore.collection(\"invites\").doc(inviteId).set({\n                doctorId: doctorId,\n                validUntil: firestoreInvExp\n            });\n\n        } catch (e) {\n            console.log(e);\n            alert(e);\n        }\n        return inviteId;\n    }\n\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password);\n    }\n\n    function logout() {\n        return auth.signOut();\n    }\n\n    function updateDisplayName(displayName) {\n        return currentUser.updateProfile({displayName});\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password);\n    }\n\n    function sendPasswordResetEmail(email) {\n        return auth.sendPasswordResetEmail(email);\n    }\n\n    const value = {\n        currentUser,\n        signUp,\n        createInvite,\n        login,\n        logout,\n        updateDisplayName,\n        updatePassword,\n        sendPasswordResetEmail\n    }\n\n    useEffect(()=>{\n        // Callback that will automatically setUser when user state changes (e.g. user logs in)\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            // Firebase will automatically search through\n            // localStorage to see if you have the right tokens\n            // to automatically login.\n            // Do not render sign up form while this async process is occurring\n            setLoading(false);\n        })\n\n        return unsubscribe;  // auth.onAuthStateChanged(...) returns an unsubscribe method\n    },[]);\n\n    return (\n        <AuthContext.Provider  value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport {useAuth} from \"../contexts/AuthContext\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme)=>({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        backgroundColor: \"#6200EE\",\n        fontWeight: \"bold\"\n    },\n    icon: {\n      marginRight: \"0.8rem\",\n      color: \"red\"\n    }\n}\n))\n\nexport const Navbar = () => {\n    const classes = useStyles();\n    const { logout } = useAuth();\n\n    return (\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Grid\n                justify=\"space-between\" // Add it here :)\n                container >\n            <Typography variant=\"h6\" noWrap>\n              Dashboard\n            </Typography>\n            <Box display=\"flex\" alignItems=\"center\">\n              <FavoriteIcon className={classes.icon}/>\n              <Typography variant=\"h6\" noWrap onClick={logout}>\n                Heartsight\n              </Typography>\n            </Box>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\nimport RecentActorsIcon from \"@material-ui/icons/RecentActors\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport SystemUpdateAltIcon from \"@material-ui/icons/SystemUpdateAlt\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: \"auto\",\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport const NavDrawer = () => {\n    const classes = useStyles();\n    const [patientOpen, setPatientOpen] = React.useState(true);\n    const [profileOpen, setProfileOpen] = React.useState(true);\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <Toolbar />\n            <div className={classes.drawerContainer}>\n                <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\n                    <ListItem button component={Link} to=\"/\">\n                        <ListItemIcon>\n                            <DashboardIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Dashboard\" />\n                    </ListItem>\n                    <ListItem button onClick={() => setPatientOpen(!patientOpen)}>\n                        <ListItemIcon>\n                            <AccessibilityIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Patients\" />\n                        {patientOpen ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse in={patientOpen} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem\n                                button\n                                component={Link}\n                                to=\"/patients\"\n                                className={classes.nested}\n                            >\n                                <ListItemIcon>\n                                    <RecentActorsIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"My Patients\" />\n                            </ListItem>\n                        </List>\n                        <List component=\"div\" disablePadding>\n                            <ListItem\n                                button\n                                component={Link}\n                                to=\"/patient/add\"\n                                className={classes.nested}\n                            >\n                                <ListItemIcon>\n                                    <GroupAddIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Add Patients\" />\n                            </ListItem>\n                        </List>\n                        <List component=\"div\" disablePadding>\n                            <ListItem\n                                button\n                                component={Link}\n                                to=\"/patient/alerts\"\n                                className={classes.nested}\n                            >\n                                <ListItemIcon>\n                                    <NotificationsIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Alerts\" />\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                    <ListItem\n                        button\n                        onClick={() => setProfileOpen(!profileOpen)}\n                        component={Link}\n                        to=\"/profile\"\n                    >\n                        <ListItemIcon>\n                            <LocalHospitalIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Doctor\" />\n                        {profileOpen ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse in={profileOpen} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem\n                                button\n                                component={Link}\n                                to=\"/doctor/profile\"\n                                className={classes.nested}\n                            >\n                                <ListItemIcon>\n                                    <AccountBoxIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"View Profile\" />\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function BasicTable({ header, rows, onClick }) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const onRowClick = (row) => {\n    history.push({ pathname: \"/patients/patient\", state: row });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            {header.map((column) => (\n              <TableCell key={column.field} align=\"center\" variant=\"head\">\n                <Typography style={{ fontWeight: 600 }}>\n                  {column.title}\n                </Typography>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, key) => {\n            return (\n              <TableRow\n                key={key}\n                onClick={onClick ? () => onRowClick(row) : null}\n                hover={true}\n              >\n                {header.map((column) => (\n                  <TableCell key={column.field} align=\"center\">\n                    {row[column.field]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","const heartrate = [];\nfor (let i = 0; i < 100; i++) {\n  const value = Math.round(120 - Math.random() * 40);\n  heartrate.push(value);\n}\n\nexport default heartrate;\n","export default [\n  {\n    givenName: \"Carl\",\n    surname: \"Barnes\",\n    gender: \"Male\",\n    age: \"19\",\n    email: \"c.barnes@randatmail.com\",\n    phone: \"473-3165-08\",\n    occupation: \"Mechanic\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Alexia\",\n    surname: \"Bailey\",\n    gender: \"Female\",\n    age: \"21\",\n    email: \"a.bailey@randatmail.com\",\n    phone: \"398-6893-75\",\n    occupation: \"Scientist\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Savana\",\n    surname: \"Miller\",\n    gender: \"Female\",\n    age: \"23\",\n    email: \"s.miller@randatmail.com\",\n    phone: \"996-5188-26\",\n    occupation: \"Veterinarian\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Sarah\",\n    surname: \"Clark\",\n    gender: \"Female\",\n    age: \"19\",\n    email: \"s.clark@randatmail.com\",\n    phone: \"676-5424-31\",\n    occupation: \"Firefighter\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Paul\",\n    surname: \"Elliott\",\n    gender: \"Male\",\n    age: \"20\",\n    email: \"p.elliott@randatmail.com\",\n    phone: \"367-1125-99\",\n    occupation: \"Actor\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Kelsey\",\n    surname: \"Robinson\",\n    gender: \"Female\",\n    age: \"27\",\n    email: \"k.robinson@randatmail.com\",\n    phone: \"638-9745-22\",\n    occupation: \"Meteorologist\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Emma\",\n    surname: \"Moore\",\n    gender: \"Female\",\n    age: \"26\",\n    email: \"e.moore@randatmail.com\",\n    phone: \"106-0420-49\",\n    occupation: \"Baker\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Lenny\",\n    surname: \"Wright\",\n    gender: \"Male\",\n    age: \"29\",\n    email: \"l.wright@randatmail.com\",\n    phone: \"150-9959-00\",\n    occupation: \"Accountant\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Heather\",\n    surname: \"Douglas\",\n    gender: \"Female\",\n    age: \"26\",\n    email: \"h.douglas@randatmail.com\",\n    phone: \"312-0891-87\",\n    occupation: \"Mechanic\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Chloe\",\n    surname: \"Nelson\",\n    gender: \"Female\",\n    age: \"27\",\n    email: \"c.nelson@randatmail.com\",\n    phone: \"778-6299-15\",\n    occupation: \"Engineer\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Ryan\",\n    surname: \"Farrell\",\n    gender: \"Male\",\n    age: \"28\",\n    email: \"r.farrell@randatmail.com\",\n    phone: \"148-4180-89\",\n    occupation: \"Biochemist\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Edwin\",\n    surname: \"Harrison\",\n    gender: \"Male\",\n    age: \"28\",\n    email: \"e.harrison@randatmail.com\",\n    phone: \"960-2031-00\",\n    occupation: \"Engineer\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Adison\",\n    surname: \"Robinson\",\n    gender: \"Male\",\n    age: \"22\",\n    email: \"a.robinson@randatmail.com\",\n    phone: \"315-9946-03\",\n    occupation: \"Architect\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Belinda\",\n    surname: \"Hunt\",\n    gender: \"Female\",\n    age: \"30\",\n    email: \"b.hunt@randatmail.com\",\n    phone: \"969-2602-62\",\n    occupation: \"Interpreter\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Tiana\",\n    surname: \"Harris\",\n    gender: \"Female\",\n    age: \"18\",\n    email: \"t.harris@randatmail.com\",\n    phone: \"302-1202-96\",\n    occupation: \"Biochemist\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Amanda\",\n    surname: \"Reed\",\n    gender: \"Female\",\n    age: \"23\",\n    email: \"a.reed@randatmail.com\",\n    phone: \"116-9662-07\",\n    occupation: \"Jeweller\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Victor\",\n    surname: \"Edwards\",\n    gender: \"Male\",\n    age: \"23\",\n    email: \"v.edwards@randatmail.com\",\n    phone: \"055-9550-14\",\n    occupation: \"Astronomer\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"David\",\n    surname: \"Clark\",\n    gender: \"Male\",\n    age: \"28\",\n    email: \"d.clark@randatmail.com\",\n    phone: \"585-2948-60\",\n    occupation: \"Architect\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Maddie\",\n    surname: \"Edwards\",\n    gender: \"Female\",\n    age: \"27\",\n    email: \"m.edwards@randatmail.com\",\n    phone: \"712-4993-55\",\n    occupation: \"Journalist\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Thomas\",\n    surname: \"Cameron\",\n    gender: \"Male\",\n    age: \"26\",\n    email: \"t.cameron@randatmail.com\",\n    phone: \"702-5627-00\",\n    occupation: \"Graphic Designer\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Maya\",\n    surname: \"Perkins\",\n    gender: \"Female\",\n    age: \"18\",\n    email: \"m.perkins@randatmail.com\",\n    phone: \"557-0333-97\",\n    occupation: \"Salesman\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Annabella\",\n    surname: \"Dixon\",\n    gender: \"Female\",\n    age: \"24\",\n    email: \"a.dixon@randatmail.com\",\n    phone: \"293-5981-60\",\n    occupation: \"Jeweller\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Naomi\",\n    surname: \"Williams\",\n    gender: \"Female\",\n    age: \"25\",\n    email: \"n.williams@randatmail.com\",\n    phone: \"718-5633-04\",\n    occupation: \"Pharmacist\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Isabella\",\n    surname: \"Richards\",\n    gender: \"Female\",\n    age: \"28\",\n    email: \"i.richards@randatmail.com\",\n    phone: \"529-1259-26\",\n    occupation: \"Chef\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Adam\",\n    surname: \"Montgomery\",\n    gender: \"Male\",\n    age: \"25\",\n    email: \"a.montgomery@randatmail.com\",\n    phone: \"080-4035-41\",\n    occupation: \"Firefighter\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Alfred\",\n    surname: \"Nelson\",\n    gender: \"Male\",\n    age: \"26\",\n    email: \"a.nelson@randatmail.com\",\n    phone: \"698-0271-39\",\n    occupation: \"Actor\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Miller\",\n    surname: \"Hill\",\n    gender: \"Male\",\n    age: \"23\",\n    email: \"m.hill@randatmail.com\",\n    phone: \"526-9584-08\",\n    occupation: \"Producer\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Dominik\",\n    surname: \"Andrews\",\n    gender: \"Male\",\n    age: \"20\",\n    email: \"d.andrews@randatmail.com\",\n    phone: \"521-0855-24\",\n    occupation: \"Cook\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Alisa\",\n    surname: \"Murphy\",\n    gender: \"Female\",\n    age: \"19\",\n    email: \"a.murphy@randatmail.com\",\n    phone: \"118-2191-60\",\n    occupation: \"Baker\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Darcy\",\n    surname: \"Smith\",\n    gender: \"Female\",\n    age: \"23\",\n    email: \"d.smith@randatmail.com\",\n    phone: \"817-2072-00\",\n    occupation: \"Aeroplane Pilot\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Jessica\",\n    surname: \"Murray\",\n    gender: \"Female\",\n    age: \"24\",\n    email: \"j.murray@randatmail.com\",\n    phone: \"770-0571-37\",\n    occupation: \"Botanist\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"George\",\n    surname: \"Jones\",\n    gender: \"Male\",\n    age: \"21\",\n    email: \"g.jones@randatmail.com\",\n    phone: \"183-6335-88\",\n    occupation: \"Auditor\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Stuart\",\n    surname: \"Johnston\",\n    gender: \"Male\",\n    age: \"21\",\n    email: \"s.johnston@randatmail.com\",\n    phone: \"037-3038-93\",\n    occupation: \"Interpreter\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Aston\",\n    surname: \"Harrison\",\n    gender: \"Male\",\n    age: \"27\",\n    email: \"a.harrison@randatmail.com\",\n    phone: \"331-3299-14\",\n    occupation: \"Interpreter\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Roman\",\n    surname: \"Crawford\",\n    gender: \"Male\",\n    age: \"29\",\n    email: \"r.crawford@randatmail.com\",\n    phone: \"288-2312-08\",\n    occupation: \"Lecturer\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Antony\",\n    surname: \"Martin\",\n    gender: \"Male\",\n    age: \"28\",\n    email: \"a.martin@randatmail.com\",\n    phone: \"316-3337-88\",\n    occupation: \"Economist\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Lyndon\",\n    surname: \"Richardson\",\n    gender: \"Male\",\n    age: \"23\",\n    email: \"l.richardson@randatmail.com\",\n    phone: \"552-4936-84\",\n    occupation: \"Lecturer\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Lucia\",\n    surname: \"Richards\",\n    gender: \"Female\",\n    age: \"22\",\n    email: \"l.richards@randatmail.com\",\n    phone: \"700-8566-90\",\n    occupation: \"Lawer\",\n    maritalStatus: \"Single\",\n  },\n  {\n    givenName: \"Rafael\",\n    surname: \"Spencer\",\n    gender: \"Male\",\n    age: \"24\",\n    email: \"r.spencer@randatmail.com\",\n    phone: \"913-2760-77\",\n    occupation: \"Chemist\",\n    maritalStatus: \"Married\",\n  },\n  {\n    givenName: \"Jordan\",\n    surname: \"Craig\",\n    gender: \"Male\",\n    age: \"19\",\n    email: \"j.craig@randatmail.com\",\n    phone: \"909-6565-36\",\n    occupation: \"Agronomist\",\n    maritalStatus: \"Single\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport Table from \"../../Table\";\nimport dummyData from \"../../../dummyData/dummyPatientData\";\nimport { firestore } from \"../../../firebase\";\n\nconst PatientLister = () => {\n  const header = [\n    { field: \"givenName\", title: \"Given Name\" },\n    { field: \"surname\", title: \"Surname\" },\n    { field: \"age\", title: \"Age\" },\n    { field: \"gender\", title: \"Gender\" },\n  ];\n\n  const [tableData, setTableData] = useState([]);\n  // console.log(\"write\");\n  // console.log(dummyData.length);\n  // for (let i = 0; i < dummyData.length; i++) {\n  //   firestore\n  //     .collection(\"patients\")\n  //     .add(dummyData[i])\n  //     .then((docRef) => {\n  //       console.log(\"Document written with ID: \", docRef.id);\n  //     })\n  //     .catch((error) => {\n  //       console.error(\"Error adding document: \", error);\n  //     });\n  // }\n  useEffect(() => {\n    const tempData = [];\n    firestore\n      .collection(\"patients\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          //console.log(doc.id, \" => \", doc.data());\n          tempData.push(doc.data());\n        });\n        setTableData(tempData);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <h1>My Patients</h1>\n      <Table header={header} rows={tableData} onClick={true} />\n    </>\n  );\n};\n\nexport default PatientLister;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\"\nimport { CircularProgress } from \"@material-ui/core\"\nimport QRCode from 'qrcode';\nimport { useEffect, useState } from \"react\";\nimport { useAuth, createInvite } from \"../../../contexts/AuthContext\";\nimport { firestore } from \"../../../firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  root: {\n    display: 'flex',\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    paddingTop: \"-64px\"\n  },\n  header: {\n    textAlign: \"center\",\n    fontSize: \"3rem\"\n  },\n  qrCode: {\n    width: \"18rem\"\n  },\n  sub: {\n    fontSize: \"1.75rem\"\n  },\n  spinner: {\n    height: \"60px\",\n    width: \"60px\"\n  }\n}));\n\nconst PatientAdd = () => {\n    const classes = useStyles();\n    const { currentUser, createInvite } = useAuth();\n    const [src, setSrc] = useState('');\n\n    useEffect(async () => {\n        // Retrieve doctorId and inviteId \n        const inviteId = await createInvite();\n        const doctorId = currentUser.uid;\n        const doctorIdDoc = await firestore.collection(\"doctors\").doc(doctorId).get();\n        const doctorIdData = doctorIdDoc.data();\n\n        const qrtext = `${inviteId}-${doctorId}`;\n        QRCode.toDataURL(qrtext).then(setSrc);\n    }, [])\n\n\n    return (\n        <div className={classes.root}>\n            <h1 className={classes.header}>\n                Patient Link QR Code\n      </h1>\n            <img className={classes.qrCode} src={src} >\n            </img>\n            <p className={classes.sub}>Waiting for a patient to scan the code...</p>\n            <CircularProgress className={classes.spinner} color=\"secondary\" />\n        </div>\n  )\n};\n\nexport default PatientAdd;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { TextField, Paper } from \"@material-ui/core\";\n\nexport const UpdateProfileForm = (props) => {\n    return (\n        <form id={props.formId} className={props.classes.form} noValidate onSubmit={props.handleSubmitWithCleanup}>\n\n            <Grid container spacing={1}>\n                <Grid item xs={6}>\n                    <Typography >\n                        Given Name:\n\n                    </Typography>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        onChange={props.handleInputChange}\n                        value={props.inputs.givenName}\n                        name=\"givenName\"\n                        className={props.classes.textfield}\n                        variant=\"outlined\"\n                        id=\"givenName\"\n                        autoComplete=\"givenName\"\n                        fullWidth\n                        size=\"small\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography>\n                        Family Name:\n\n                    </Typography>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        onChange={props.handleInputChange}\n                        value={props.inputs.familyName}\n                        fullWidth\n                        size=\"small\"\n                        name=\"familyName\"\n                        className={props.classes.textfield}\n                        variant=\"outlined\"\n                        id=\"familyName\"\n                        autoComplete=\"familyName\"\n\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography>\n                        Date of Birth:\n\n                    </Typography>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        size=\"small\"\n                        onChange={props.handleInputChange}\n                        value={props.inputs.dob}\n                        name=\"dob\"\n                        type=\"date\"\n                        className={props.classes.textfield}\n                        variant=\"outlined\"\n                        id=\"dob\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography>\n                        Gender:\n\n                    </Typography>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        onChange={props.handleInputChange}\n                        value={props.inputs.gender}\n                        fullWidth\n                        size=\"small\"\n                        name=\"gender\"\n                        className={props.classes.textfield}\n                        variant=\"outlined\"\n                        id=\"gender\"\n                        autoComplete=\"gender\"\n\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n\n                </Grid>\n\n\n\n                <Grid item xs={6}>\n                    <Typography>\n                        Place of Practice:\n\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        onChange={props.handleInputChange}\n                        value={props.inputs.placeOfPractice}\n                        fullWidth\n                        size=\"small\"\n                        name=\"placeOfPractice\"\n                        className={props.classes.placeOfPractice}\n                        variant=\"outlined\"\n                        id=\"placeOfPractice\"\n                        autoComplete=\"placeOfPractice\"\n\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n                </Grid>\n\n            </Grid>\n        </form>\n    );\n};\n","import React, {useState} from 'react';\r\n\r\nconst useForm = (callback) => {\r\n\tconst [inputs, setInputs] = useState({});\r\n\tconst handleSubmit = (event) => {\r\n\t\tif (event) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\treturn callback();\r\n\t}\r\n\tconst handleInputChange = (event) => {\r\n\t\tconsole.log(inputs);\r\n\t\tevent.persist();\r\n\t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\r\n\t}\r\n\tconst handleCheckboxChange = (event) => {\r\n\t\tconsole.log(inputs);\r\n\t\tevent.persist();\r\n\t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.checked}));\r\n\t}\r\n\treturn {\r\n\t\thandleSubmit,\r\n\t\thandleInputChange,\r\n\t\thandleCheckboxChange,\r\n\t\tinputs,\r\n        setInputs\r\n\t};\r\n}\r\nexport default useForm;\r\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Button, Paper, Fade, Grid } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { firestore } from \"../../../firebase\";\nimport { UpdateProfileForm } from \"./UpdateProfileForm\";\nimport useForm from \"../../../hooks/useForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst FORM_ID = \"updateProfileForm\";\n\nconst DoctorProfile = (props) => {\n    const location = useLocation();\n\n    const { currentUser } = useAuth();\n\n    const classes = useStyles();\n\n    // Start with empty doctor profile with no info\n    const [doctorProfileInfo, setDoctorProfileInfo] = useState({});\n\n    const [error, setError] = useState('');\n\n    // flag to signal when edit page is shown\n    const [editMode, setEditMode] = useState(false);\n\n    // callback function for form submission\n    const updateProfile = async () => {\n        try {\n            // fetch doctor profile from firestore\n            await firestore.collection(\"doctors\").doc(currentUser.uid).set({\n                givenName: updateProfileInputs.givenName,\n                familyName: updateProfileInputs.familyName,\n                email: updateProfileInputs.email,\n                dob: new Date(updateProfileInputs.dob),\n                gender: updateProfileInputs.gender,\n                placeOfPractice: updateProfileInputs.placeOfPractice\n            });\n\n            setDoctorProfileInfo({\n                givenName: updateProfileInputs.givenName,\n                familyName: updateProfileInputs.familyName,\n                email: updateProfileInputs.email,\n                dob: updateProfileInputs.dob,\n                gender: updateProfileInputs.gender,\n                placeOfPractice: updateProfileInputs.placeOfPractice\n            });\n\n            // change back to view doctor profile\n            setEditMode(false);\n\n        } catch (e) {\n            console.log(e);\n            alert(`Update failed: ${e}`);\n        }\n    }\n\n    const {\n        setInputs: setUpdateProfileInputs,\n        inputs: updateProfileInputs,\n        handleInputChange: updateProfileHandleInputChange,\n        handleCheckboxChange: updateProfileHandleCheckboxChange,\n        handleSubmit: updateProfileHandleSubmit\n    } = useForm(updateProfile);\n\n    // On component mount/unmount, retrieve user information from firebase and set to empty doctor profile\n    useEffect(async () => {\n        // Retrieve user information using currentUser\n        const userDataDoc = await firestore.collection(\"doctors\").doc(currentUser.uid).get();\n        console.log(userDataDoc)\n        const userData = userDataDoc.data();\n        console.log(userData)\n        setDoctorProfileInfo({\n            givenName: userData.givenName,\n            familyName: userData.familyName,\n            dob: userData.dob.toDate().toISOString().substring(0, 10),\n            email: userData.email,\n            gender: userData.gender,\n            placeOfPractice: userData.placeOfPractice\n        });\n    }, []);\n\n\n    // Fields for display profile table\n    const fields = [\n        { field: \"givenName\", title: \"Given Name\" },\n        { field: \"familyName\", title: \"Family Name\" },\n        { field: \"dob\", title: \"Date of Birth\" },\n        { field: \"gender\", title: \"Gender\" },\n        { field: \"placeOfPractice\", title: \"Place of Practice\" }\n    ];\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={2}>\n                        <Paper className={classes.paper}>\n                            <AccountCircleIcon fontSize=\"large\" />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} >\n                                    <Typography variant=\"h5\" display=\"inline\" style={{ float: \"left\" }}>Doctor</Typography>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    <Typography display=\"inline\" style={{ float: \"left\" }}>\n                                        {doctorProfileInfo[\"givenName\"]} {doctorProfileInfo[\"familyName\"]}\n                                    </Typography>\n\n                                </Grid>\n                                <Grid>\n                                    <Typography display=\"inline\" style={{ float: \"left\" }}>\n                                        {doctorProfileInfo[\"email\"]}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    {editMode ? <EditProfileButtons\n                                        classes={classes}\n                                        onClick={() => setEditMode(false)} /> :\n                                        <UpdateProfileButton\n                                            onClick={() => {\n                                                setEditMode(true)\n                                                setUpdateProfileInputs(doctorProfileInfo)\n                                            }} />}\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            {editMode ? <UpdateProfileForm\n                                classes={classes}\n                                handleSubmitWithCleanup={updateProfileHandleSubmit}\n                                handleInputChange={updateProfileHandleInputChange}\n                                handleCheckboxChange={updateProfileHandleCheckboxChange}\n                                inputs={updateProfileInputs}\n                                setError={setError}\n                                formId={FORM_ID} /> :\n                                <ProfileTable\n                                    fields={fields}\n                                    doctorProfileInfo={doctorProfileInfo} />}\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n};\n\nconst ProfileTable = (props) => {\n    return <Grid container spacing={3}>\n        {props.fields.map((field, key) => (\n            <><Grid key={key} item xs={6}>\n                <Typography>\n                    {field.title}:\n                </Typography>\n            </Grid>\n                <Grid key={key} item xs={6}>\n                    <Typography align=\"left\">\n                        {props.doctorProfileInfo[field.field]}\n                    </Typography>\n                </Grid></>\n\n\n        ))}\n    </Grid>;\n}\n\nconst UpdateProfileButton = (props) => {\n    return <Button\n        onClick={props.onClick}\n        display=\"inline\" style={{\n            float: \"left\", backgroundColor: \"#6200EE\",\n            color: \"#FFFFFF\",\n        }}>\n        Edit Profile\n    </Button>;\n}\n\nconst EditProfileButtons = (props) => {\n    return <div style={{ float: \"right\" }}><Button\n        onClick={props.onClick}\n    >\n        Cancel\n    </Button>\n        <Button\n            type=\"submit\"\n            form={FORM_ID}\n            style={{\n                backgroundColor: \"#6200EE\",\n                color: \"#FFFFFF\",\n            }}\n            variant=\"contained\"\n            className={props.classes.submit}\n        >\n            Save\n        </Button></div>\n}\n\nexport default DoctorProfile;","export default [\n  1523, 1495, 1479, 1546, 1561, 1537, 1638, 1642, 1662, 1733, 1714, 1848, 2018,\n  1950, 1848, 1840, 1863, 1688, 3308, 2130, 1713, 1614, 1683, 1740, 1794, 1920,\n  1962, 2155, 2144, 2155, 2020, 1823, 1727, 1639, 1563, 1645, 1628, 1690, 1783,\n  1792, 1779, 1791, 1882, 1924, 1995, 1985, 1883, 1913, 1953, 1898, 1931, 2811,\n  3182, 1729, 1953, 1912, 1985, 1935, 2239, 2232, 2335, 2417, 2412, 2217, 2040,\n  1865, 1832, 1827, 1801, 1893, 1881, 1934, 1875, 2015, 1923, 1936, 1953, 1912,\n  2024, 2026, 1974, 1925, 1866, 1898, 1820, 2488, 3449, 1617, 1932, 1863, 1954,\n  2081, 2016, 2154, 2296, 2444, 2317, 2301, 2135, 1995, 1930, 1964, 1976, 1957,\n  1982, 1968, 1917, 1928, 1966, 2026, 1990, 1969, 2067, 2114, 2145, 2001, 1910,\n  2059, 1976, 2095, 3597, 1852, 2044, 1987, 2006, 2073, 2164, 2181, 2372, 2508,\n  2567, 2475, 2200, 2064, 2005, 1968, 2041, 2028, 2053, 2016, 1996, 2107, 2002,\n  2024, 2118, 2074, 2152,\n];\n","import { ResponsiveLine } from \"@nivo/line\";\nimport dummyData from \"../dummyData/dummyECGData\";\nimport { Typography } from \"@material-ui/core\";\n// make sure parent container have a defined height when using\n// responsive component, otherwise height will be 0 and\n// no chart will be rendered.\n// website examples showcase many properties,\n// you'll often use just a few of them.\n\nconst MyResponsiveLine = ({ title, data }) => {\n  const converted = data.map((val, key) => ({ x: key, y: val }));\n  const formattedData = [{ color: \"hsl(29, 70%, 50%)\", data: converted }];\n  return (\n    <>\n      <Typography variant=\"h5\" style={{ marginTop: 10 }}>\n        {title}\n      </Typography>\n      <ResponsiveLine\n        data={formattedData}\n        margin={{ top: 20, right: 50, bottom: 50, left: 60 }}\n        xScale={{ type: \"point\" }}\n        yScale={{\n          type: \"linear\",\n          min: \"auto\",\n          max: \"auto\",\n          stacked: true,\n          reverse: false,\n        }}\n        yFormat=\" >-.2f\"\n        axisTop={null}\n        axisRight={null}\n        // axisBottom={{\n        //   orient: \"bottom\",\n        //   tickSize: 0,\n        //   tickPadding: 5,\n        //   tickRotation: 0,\n        //   legendOffset: 36,\n        //   legendPosition: \"middle\",\n        //   format: () => null,\n        // }}\n        axisBottom={null}\n        axisLeft={{\n          orient: \"left\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: title,\n          legendOffset: -50,\n          legendPosition: \"middle\",\n        }}\n        pointSize={10}\n        pointColor={{ theme: \"background\" }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: \"serieColor\" }}\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={\n          [\n            // {\n            //   anchor: \"bottom-right\",\n            //   direction: \"column\",\n            //   justify: false,\n            //   translateX: 100,\n            //   translateY: 0,\n            //   itemsSpacing: 0,\n            //   itemDirection: \"left-to-right\",\n            //   itemWidth: 80,\n            //   itemHeight: 20,\n            //   itemOpacity: 0.75,\n            //   symbolSize: 12,\n            //   symbolShape: \"circle\",\n            //   symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n            //   effects: [\n            //     {\n            //       on: \"hover\",\n            //       style: {\n            //         itemBackground: \"rgba(0, 0, 0, .03)\",\n            //         itemOpacity: 1,\n            //       },\n            //     },\n            //   ],\n            // },\n          ]\n        }\n      />\n    </>\n  );\n};\n\nexport default MyResponsiveLine;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport ResponsiveLine from \"./ResponsiveLine\";\nimport dummyData from \"../dummyData/dummyECGData\";\nimport dummyECGData from \"../dummyData/dummyECGData\";\nimport dummyHeartRate from \"../dummyData/dummyHeartRate\";\nimport Table from \"./Table\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n      style={{\n        height: 500,\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        padding: 20,\n      }}\n    >\n      {/* {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )} */}\n      {children}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs({ headers }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const alertHeader = [\n    { field: \"alertType\", title: \"Alert Type\" },\n    { field: \"date\", title: \"Alert Date \" },\n  ];\n  const alertData = [\n    { alertType: \"High Heart Rate\", date: \"01-04-2021\" },\n    { alertType: \"Unusual ECG Pattern\", date: \"05-04-2021\" },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          style={{ backgroundColor: \"#6200EE\" }}\n        >\n          {headers.map((title, key) => (\n            <Tab key={key} label={title} {...a11yProps(key)} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Table header={alertHeader} rows={alertData} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ResponsiveLine title=\"ECG Reading\" data={dummyECGData} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ResponsiveLine\n          title=\"Heart Rate (BPM)\"\n          data={dummyHeartRate}\n          onClick={false}\n        />\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Tabs from \"../../Tabs\";\nimport { useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { firestore } from \"../../../firebase\";\nimport useForm from \"../../../hooks/useForm\";\nimport { Link } from \"react-router-dom\";\nimport { UpdateProfileForm } from \"./UpdateProfileForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst getDoctorProfileInfoQuery = (currentUser) => {\n\n}\n\nconst FORM_ID = \"updateProfileForm\";\n\n\nconst DoctorProfile = (props) => {\n    const location = useLocation();\n\n    const { currentUser } = useAuth();\n    \n    const classes = useStyles();\n\n    const [error, setError] = useState('');\n    // callback function for form submission\n    const updateProfile = async () => {\n        await firestore.collection(\"doctors\").doc(currentUser.uid).set({\n            givenName: updateProfileInputs.givenName,\n            familyName: updateProfileInputs.familyName,\n            email: updateProfileInputs.email,\n            dob: new Date(updateProfileInputs.dob),\n            gender: updateProfileInputs.gender,\n            placeOfPractice: updateProfileInputs.placeOfPractice\n        });\n        alert(`User profile successfully updated`);\n    }\n\n    const {\n        setInputs: setUpdateProfileInputs,\n        inputs: updateProfileInputs,\n        handleInputChange: updateProfileHandleInputChange,\n        handleCheckboxChange: updateProfileHandleCheckboxChange,\n        handleSubmit: updateProfileHandleSubmit\n    } = useForm(updateProfile);\n\n    const [initialDoctorProfile, setInitialDoctorProfile] = useState({});\n\n    // On component mount/unmount, retrieve user information from firebase and set to empty doctor profile\n    useEffect(async () => {\n        // Retrieve user information using currentUser\n        const userDataDoc = await firestore.collection(\"doctors\").doc(currentUser.uid).get();\n        console.log(userDataDoc);\n        const userData = userDataDoc.data();\n        console.log(userData);\n        setInitialDoctorProfile({\n            givenName: userData.givenName,\n            familyName: userData.familyName,\n            dob: userData.dob.toDate().toISOString().substring(0, 10),\n            email: userData.email,\n            gender: userData.gender,\n            placeOfPractice: userData.placeOfPractice\n\n        });\n        setUpdateProfileInputs({\n            givenName: userData.givenName,\n            familyName: userData.familyName,\n            dob: userData.dob.toDate().toISOString().substring(0, 10),\n            email: userData.email,\n            gender: userData.gender,\n            placeOfPractice: userData.placeOfPractice\n\n        });\n    }, []);\n\n \n\n    return (\n        <>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={2}>\n                        <Paper className={classes.paper}>\n                            <AccountCircleIcon fontSize=\"large\" />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} >\n                                    <Typography variant=\"h5\" display=\"inline\" style={{ float: \"left\" }}>Doctor</Typography>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    {initialDoctorProfile && <Typography display=\"inline\" style={{ float: \"left\" }}>\n                                        {initialDoctorProfile[\"givenName\"]} {initialDoctorProfile[\"familyName\"]}\n                                    </Typography>}\n\n                                </Grid>\n                                <Grid item xs={12} >\n                                    <Button\n                                        button\n                                        component={Link}\n                                        to=\"/doctor/profile\"\n                                    >\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        form={FORM_ID}\n                                        style={{\n                                            backgroundColor: \"#5784FF\",\n                                            color: \"#FFFFFF\",\n                                        }}\n                                        variant=\"contained\"\n                                        className={classes.submit}\n                                    >\n                                        Save\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={5} justify=\"center\">\n\n                                <UpdateProfileForm\n                                    classes={classes}\n                                    handleSubmitWithCleanup={updateProfileHandleSubmit}\n                                    handleInputChange={updateProfileHandleInputChange}\n                                    handleCheckboxChange={updateProfileHandleCheckboxChange}\n                                    inputs={updateProfileInputs}\n                                    setError={setError}\n                                    formId={FORM_ID}\n\n                                />\n\n\n\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n\n    );\n};\n\n\n\n\nexport default DoctorProfile;\n","import React from 'react'\n\nconst DashboardAnayltics = () => {\n    return (\n        <div>\n            <h1>Dashboard Analytics</h1>\n        </div>\n    )\n}\n\nexport default DashboardAnayltics","import React from 'react'\n\nconst PatientAlerts = () => {\n    return (\n        <h1>Patient Alerts</h1>\n    )\n}\n\nexport default PatientAlerts","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Tabs from \"../../Tabs\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    height: \"100%\",\n  },\n}));\n\nconst PatientLister = (props) => {\n  const location = useLocation();\n  const data = location.state;\n  const tabHeadings = [\"Alerts\", \"ECG History\", \"Heartrate\"];\n  const fields = [\n    { field: \"email\", title: \"Email\" },\n    { field: \"occupation\", title: \"Occupation\" },\n    { field: \"age\", title: \"Age\" },\n    { field: \"gender\", title: \"Gender\" },\n    { field: \"phone\", title: \"Phone\" },\n    { field: \"maritalStatus\", title: \"Marital Status\" },\n  ];\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          <Grid item xs={2}>\n            <Paper className={classes.paper}>\n              <AccountCircleIcon fontSize=\"large\" />\n            </Paper>\n          </Grid>\n          <Grid item xs={2}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Typography variant=\"h5\">Patient</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography>\n                    {data[\"givenName\"]} {data[\"surname\"]}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button\n                    style={{ backgroundColor: \"#6200EE\", color: \"white\" }}\n                  >\n                    See Profile\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.paper}>\n              <Grid container spacing={3} justify=\"center\">\n                {fields.map((field, key) => (\n                  <Grid key={key} item xs={6}>\n                    <Typography>\n                      {field.title}: {data[field.field]}\n                    </Typography>\n                  </Grid>\n                ))}\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n        <div style={{ height: 20 }}></div>\n        <Tabs headers={tabHeadings} />\n      </div>\n    </>\n  );\n};\n\nexport default PatientLister;\n","import React from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PatientLister from \"./pages/patient/PatientLister\";\nimport PatientAdd from \"./pages/patient/PatientAdd\";\nimport DoctorProfile from \"./pages/doctor/DoctorProfile\";\nimport DoctorUpdate from \"./pages/doctor/DoctorUpdate\";\nimport DashboardAnalytics from \"./pages/dashboard/DashboardAnayltics\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PatientAlerts from \"./pages/patient/PatientAlerts\";\nimport PatientView from \"./pages/patient/PatientView\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport const Canvas = () => {\n  const classes = useStyles();\n\n  return (\n    <main className={classes.content}>\n      <Toolbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <DashboardAnalytics />\n        </Route>\n        <Route exact path=\"/patients\">\n          <PatientLister />\n        </Route>\n        <Route exact path=\"/patients/patient\">\n          <PatientView />\n        </Route>\n        <Route exact path=\"/patient/add\">\n          <PatientAdd />\n        </Route>\n        <Route exact path=\"/patient/alerts\">\n          <PatientAlerts />\n        </Route>\n        <Route exact path=\"/doctor/profile\">\n          <DoctorProfile />\n        </Route>\n        <Route exact path=\"/doctor/profile/update\">\n          <DoctorUpdate />\n        </Route>\n      </Switch>\n    </main>\n  );\n};\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {Navbar} from \"./Navbar\"\nimport {NavDrawer} from \"./NavDrawer\"\nimport {Canvas} from \"./Canvas\"\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n    overflowY: \"scroll\"\n  }\n}))\nconst Dashboard = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Navbar/>\n      <NavDrawer/>\n      <Canvas/>\n    </div>\n  )\n};\n\nexport default Dashboard;\n","import {Route, Redirect} from 'react-router-dom'\nimport {useAuth} from '../contexts/AuthContext'\n\nexport const PrivateRoute = ({component: Component, ...rest}) => {\n    const {currentUser} = useAuth()\n    return (\n        <Route\n            {...rest}\n            render={props=> {\n               return currentUser ? <Component {...props} /> : <Redirect to='/login'></Redirect>\n            }}>\n        </Route>\n    )\n}\n","import {useState} from \"react\"\nimport {useHistory} from 'react-router-dom'\nimport {useAuth} from \"../../../contexts/AuthContext\"\nimport {Avatar, Button, Checkbox, CssBaseline, FormControlLabel, Grid, Link, Paper, TextField} from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Alert from '@material-ui/lab/Alert';\nimport useForm from \"../../../hooks/useForm\";\nimport {firestore} from \"../../../firebase\";\n\n// TODO: Add diagonal line and Heartsight\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        // background: [\n        //     '-webkit-linear-gradient(rgba(135, 60, 255, 1), rgba(135, 60, 255, 0.0) 0%)',\n        //     '-webkit-linear-gradient(-45deg, rgba(120, 155, 255, 0.9) 45%, rgba(55, 230, 235, 1) 0%)'\n        // ]\n    },\n    image: {\n        // backgroundImage: 'url(https://source.unsplash.com/random)',\n        backgroundRepeat: 'no-repeat',\n        // backgroundColor: \"#FFFFFF\",\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paperbase: {\n        backgroundColor: \"#6200EE\",\n        color: \"#FFFFFF\",\n    },\n    paper: {\n        margin: theme.spacing(19, 15),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        // marginTop: theme.spacing(1),\n        // color: \"#FFFFFF\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textfield: {\n        backgroundColor: \"#FFFFFF\",\n        color: \"#FFFFFF\",\n        opacity: 1,\n        borderRadius: 5\n    }\n}));\n\nconst LoginForm = (props) => {\n    return (\n        <form className={props.classes.form} noValidate onSubmit={props.handleSubmitWithCleanup}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.email}\n                name=\"email\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"email\"\n                placeholder=\"Enter your email\"\n                autoComplete=\"email\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                margin=\"normal\"\n                fullWidth\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                onChange={props.handleInputChange}\n                required\n                value={props.inputs.password}\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <Grid\n                container\n                // direction=\"row\"\n                // justifyContent=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                name={\"rememberMe\"}\n                                checked={props.inputs.rememberMe}\n                                onChange={props.handleCheckboxChange}\n                                style={{\n                                    color: \"#FFFFFF\",\n                                }}\n                            />\n                        }\n                        label=\"Remember me\"\n                    />\n                </Grid>\n                <Grid\n                    item\n                    styles={{\n                        textAlign: \"right\",\n                    }}\n                >\n                    <Link\n                        href=\"#\"\n                        variant=\"body1\"\n                        style={{\n                            color: \"#FFFFFF\",\n                        }}\n                        onClick={props.showRecoverPassword}\n                    >\n                        Recover Password\n                    </Link>\n                </Grid>\n            </Grid>\n\n\n            <Grid\n                container\n                // direction=\"row\"\n                // justifyContent=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs>\n                    <Link\n                        href=\"#\"\n                        variant=\"body1\"\n                        style={{\n                            color: \"#FFFFFF\",\n                        }}\n                        onClick={props.showSignupForm}\n                    >\n                        Create account\n                    </Link>\n                </Grid>\n                <Grid\n                    item\n                    // styles={{\n                    //     textAlign: \"right\",\n                    // }}\n                >\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        style={{\n                            backgroundColor: \"#5784FF\",\n                            color: \"#FFFFFF\",\n                        }}\n                        variant=\"contained\"\n                        className={props.classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                </Grid>\n\n            </Grid>\n        </form>\n    );\n}\n\nconst SignupForm = (props) => {\n    return (\n        <form className={props.classes.form} noValidate onSubmit={props.handleSubmitWithCleanup}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.givenName}\n                name=\"givenName\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"givenName\"\n                placeholder=\"Enter your given name\"\n                autoComplete=\"givenName\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.familyName}\n                name=\"familyName\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"familyName\"\n                placeholder=\"Enter your family name\"\n                autoComplete=\"familyName\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.email}\n                name=\"email\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"email\"\n                placeholder=\"Enter your email\"\n                autoComplete=\"email\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.dob}\n                name=\"dob\"\n                type=\"date\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"dob\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <TextField\n                margin=\"normal\"\n                fullWidth\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                onChange={props.handleInputChange}\n                required\n                value={props.inputs.password}\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                margin=\"normal\"\n                fullWidth\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                onChange={props.handleInputChange}\n                required\n                value={props.inputs.confirmPassword}\n                name=\"confirmPassword\"\n                placeholder=\"Confirm your password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <Button\n                type=\"submit\"\n                fullWidth\n                style={{\n                    backgroundColor: \"#5784FF\",\n                    color: \"#FFFFFF\",\n                }}\n                variant=\"contained\"\n                className={props.classes.submit}\n            >\n                Create Account\n            </Button>\n\n        </form>\n    );\n}\n\nconst ForgetPasswordForm = (props) => {\n    return (\n        <form className={props.classes.form} noValidate onSubmit={props.sendPwResetEmail}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.email}\n                name=\"email\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"email\"\n                placeholder=\"Enter your email\"\n                autoComplete=\"email\"\n                InputLabelProps={{\n                    shrink: true\n                }}\n            />\n\n            <Button\n                type=\"submit\"\n                fullWidth\n                style={{\n                    backgroundColor: \"#5784FF\",\n                    color: \"#FFFFFF\",\n                }}\n                variant=\"contained\"\n                className={props.classes.submit}\n            >\n                Recover Password\n            </Button>\n        </form>\n    );\n}\n\nexport const Login = () => {\n    const {login, currentUser, sendPasswordResetEmail, signUp } = useAuth();\n    const loginWithCredentials = () => {\n        return login(inputs.email, inputs.password);\n    }\n    const {inputs, handleInputChange,handleCheckboxChange, handleSubmit} = useForm(loginWithCredentials);\n\n    const signUpWithDetails = async () => {\n        try {\n            setError('');\n            await signUp(signUpInputs.email, signUpInputs.password, {\n                givenName: signUpInputs.givenName,\n                familyName: signUpInputs.familyName,\n                email: signUpInputs.email,\n                dob: new Date(signUpInputs.dob)\n            });\n        } catch (e) {\n            /*\n            auth/email-already-in-use\n            Thrown if there already exists an account with the given email address.\n            auth/invalid-email\n            Thrown if the email address is not valid.\n            auth/operation-not-allowed\n            Thrown if email/password accounts are not enabled. Enable email/password accounts in the Firebase Console, under the Auth tab.\n            auth/weak-password\n            Thrown if the password is not strong enough\n             */\n            // Handle Errors here.\n            var errorCode = e.code;\n            var errorMessage = e.message;\n            if (errorCode === 'auth/email-already-in-use') {\n                setError(\"Email already in use.\");\n            } else if (errorCode === \"auth/invalid-email\") {\n                setError(\"An invalid email was used.\");\n            } else if (errorCode === \"auth/weak-password\") {\n                setError(\"Please sign up with a stronger password.\");\n            } else {\n                setError(`Failed to sign up. Error message ${errorMessage}.`);\n            }\n            return;\n        }\n        showLoginForm();\n    }\n    const {\n        inputs: signUpInputs,\n        handleInputChange: signUpHandleInputChange,\n        handleCheckboxChange: signUpHandleCheckboxChange,\n        handleSubmit: signUpHandleSubmit\n    } = useForm(signUpWithDetails);\n\n    const [error, setError] = useState('');\n    const [info, setInfo] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    /*\n        0 = LoginForm\n        1 = ForgetPasswordForm\n        2 = SignupForm\n     */\n    const [formShown, setFormShown] = useState(0);\n\n    const history = useHistory();\n    const classes = useStyles();\n\n    const showLoginForm = () => {\n        setFormShown(0);\n    };\n\n    const showRecoverPassword = () => {\n        setFormShown(1);\n    };\n\n    const showSignupForm = () => {\n        setFormShown(2);\n    }\n\n\n    // Clean up and set loading before attempting to login\n    async function handleSubmitWithCleanup(event) {\n        const cleanUp = () => {setLoading(false)};\n\n        try {\n            setError('');\n            setLoading(true);\n            await handleSubmit(event);\n            // Check that user is logged in.\n            console.log(currentUser);\n\n        } catch(e) {\n            // Handle Errors here.\n            var errorCode = e.code;\n            var errorMessage = e.message;\n            if (errorCode === 'auth/wrong-password') {\n                setError(\"Wrong password\");\n            } else if (errorCode === \"auth/invalid-email\") {\n                setError(\"An invalid email was used.\");\n            } else {\n                setError('Failed to log in. Check if you have used the correct credentials.');\n            }\n            return cleanUp();\n        }\n\n        let res = cleanUp();\n\n        //  Only proceed if user is successfully logged in\n        history.push('/');\n        return res;\n    }\n\n    const sendPwResetEmail = async (event) => {\n        event.preventDefault();\n        try {\n            await sendPasswordResetEmail(inputs.email);\n        } catch (e) {\n            // Handle Errors here.\n            var errorCode = e.code;\n            var errorMessage = e.message;\n            if (errorCode === 'auth/wrong-password') {\n                setError(\"Wrong password\");\n            } else if (errorCode === \"auth/invalid-email\") {\n                setError(\"An invalid email was used.\");\n            } else {\n                setError('Failed to log in. Check if you have used the correct credentials.');\n            }\n        }\n        setInfo(\"Your password has been reset. Please check your email.\");\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={false} md={5} className={classes.image} />\n            <Grid item xs={12} sm={12} md={7} component={Paper} elevation={6} square className={classes.paperbase}>\n                <div className={classes.paper}>\n                    {\n                        error && (<Alert severity=\"error\">{error}</Alert>)\n                    }\n\n                    {\n                        info && (<Alert severity=\"info\">{info}</Alert>)\n                    }\n\n                    { formShown === 0 &&\n                        <LoginForm\n                            classes={classes}\n                            handleSubmitWithCleanup={handleSubmitWithCleanup}\n                            handleInputChange={handleInputChange}\n                            handleCheckboxChange={handleCheckboxChange}\n                            inputs={inputs}\n                            showRecoverPassword={showRecoverPassword}\n                            showSignupForm={showSignupForm}\n                        />\n                    }\n\n                    { formShown === 1 &&\n                        <ForgetPasswordForm\n                            classes={classes}\n                            handleSubmitWithCleanup={handleSubmitWithCleanup}\n                            handleInputChange={handleInputChange}\n                            handleCheckboxChange={handleCheckboxChange}\n                            inputs={inputs}\n                            setError={setError}\n                            sendPwResetEmail={sendPwResetEmail}\n                        />\n                    }\n\n                    { formShown === 2 &&\n                        <SignupForm\n                            classes={classes}\n                            handleSubmitWithCleanup={signUpHandleSubmit}\n                            handleInputChange={signUpHandleInputChange}\n                            handleCheckboxChange={signUpHandleCheckboxChange}\n                            inputs={signUpInputs}\n                            setError={setError}\n                        />\n                    }\n\n\n\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { AuthProvider, useAuth } from \"./contexts/AuthContext\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { Login } from \"./components/pages/login/Login\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\"\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <Router>\n      <AuthProvider>\n        <Switch>\n          <Route path=\"/login\" component={Login}></Route>\n          <PrivateRoute\n            path=\"/\"\n            to=\"/login\"\n            component={Dashboard}\n          ></PrivateRoute>\n        </Switch>\n      </AuthProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}