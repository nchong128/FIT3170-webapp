{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Navbar.js","components/NavDrawer.js","components/Table.js","dummyData/dummyHeartRate.js","components/pages/patient/PatientLister.js","components/pages/patient/PatientAdd.js","components/pages/doctor/UpdateProfileForm.js","hooks/useForm.js","components/pages/doctor/DoctorProfile.js","components/pages/patient/ECGLineGraph.js","components/pages/patient/PatientTabs.js","components/pages/doctor/DoctorUpdate.js","components/PatientAlertsTable.js","components/pages/patient/PatientAlerts.js","components/pages/patient/PatientView.js","components/Canvas.js","components/Dashboard.js","components/PrivateRoute.js","Heartsight_Landing_Image.png","components/pages/login/Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","auth","firestore","AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","email","password","meta","a","createUserWithEmailAndPassword","createUserRef","userUid","user","uid","collection","doc","set","console","log","alert","inviteId","v4","toString","replaceAll","inviteExpiry","Date","now","firestoreInvExp","Timestamp","fromDate","doctorId","validUntil","tempData","patientCollection","get","then","querySnapshot","forEach","id","notif","alertDate","data","notificationTime","seconds","push","notificationTitle","givenName","surName","familyName","time","substring","value","signUp","createInvite","pullAlerts","login","signInWithEmailAndPassword","logout","signOut","updateDisplayName","displayName","updateProfile","updatePassword","sendPasswordResetEmail","useEffect","onAuthStateChanged","Provider","useStyles","makeStyles","theme","appBar","zIndex","drawer","backgroundColor","fontWeight","icon","marginRight","color","Navbar","classes","AppBar","position","className","Toolbar","Grid","justify","container","Typography","variant","noWrap","Box","display","alignItems","onClick","width","flexShrink","drawerPaper","drawerContainer","overflow","nested","paddingLeft","spacing","NavDrawer","React","patientOpen","setPatientOpen","profileOpen","setProfileOpen","Drawer","paper","List","component","aria-labelledby","ListItem","button","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","Link","to","table","minWidth","BasicTable","header","rows","history","useHistory","TableContainer","Paper","Table","aria-label","TableHead","TableRow","map","column","TableCell","align","style","title","field","TableBody","row","key","pathname","state","onRowClick","hover","PatientLister","tableData","setTableData","currentPatient","dateOfBirth","toDate","toISOString","content","flexGrow","padding","root","height","justifyContent","flexDirection","paddingTop","textAlign","fontSize","qrCode","sub","spinner","PatientAdd","src","setSrc","doctorIdDoc","qrtext","QRCode","toDataURL","CircularProgress","UpdateProfileForm","props","formId","form","noValidate","onSubmit","handleSubmitWithCleanup","item","xs","TextField","required","onChange","handleInputChange","inputs","name","textfield","autoComplete","fullWidth","size","InputLabelProps","shrink","dob","type","gender","placeOfPractice","useForm","callback","setInputs","handleSubmit","event","preventDefault","persist","target","handleCheckboxChange","checked","palette","text","secondary","FORM_ID","ProfileTable","fields","doctorProfileInfo","UpdateProfileButton","Button","float","EditProfileButtons","submit","DoctorProfile","useLocation","setDoctorProfileInfo","setError","editMode","setEditMode","updateProfileInputs","setUpdateProfileInputs","updateProfileHandleInputChange","updateProfileHandleCheckboxChange","updateProfileHandleSubmit","userDataDoc","userData","ECGLineGraph","patientData","readings","setReadings","readingIndex","setReadingIndex","start","end","tempReadings","orderBy","limit","rd","dataPacket","startTime","convertedReadings","obj","x","y","reformedDataPacket","patientId","length","marginTop","FormControl","InputLabel","Select","labelId","label","e","reading","index","MenuItem","concat","minuteReadings","combineReadings","margin","top","right","bottom","left","xScale","precision","yScale","min","max","stacked","reverse","axisTop","axisRight","axisBottom","yFormat","orient","tickValues","legend","format","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","from","heartrate","i","Math","round","random","TabPanel","other","role","hidden","background","PatientTabs","headers","setValue","Tabs","newValue","Tab","alertType","date","initialDoctorProfile","setInitialDoctorProfile","delay","Promise","res","setTimeout","PatientAlerts","alerts","patientInfo","setPatientInfo","patientDataDoc","maritalStatus","weight","delete","update","doctors","FieldValue","arrayRemove","Canvas","exact","path","PatientView","DoctorUpdate","overflowY","Dashboard","CssBaseline","PrivateRoute","Component","rest","render","image","backgroundImage","Image","backgroundSize","backgroundPosition","paperbase","opacity","borderRadius","LoginForm","placeholder","FormControlLabel","control","Checkbox","rememberMe","styles","href","showRecoverPassword","showSignupForm","SignupForm","confirmPassword","ForgetPasswordForm","sendPwResetEmail","Login","signUpInputs","errorCode","code","errorMessage","message","showLoginForm","signUpHandleInputChange","signUpHandleCheckboxChange","signUpHandleSubmit","error","info","setInfo","formShown","setFormShown","cleanUp","sm","md","elevation","square","Alert","severity","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f5efc3c.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n//import \"firebase/analytics\";\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n});\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n//export const analytics = firebase.analytics();\n","import { useContext, createContext, useState, useEffect } from 'react'\nimport { firestore, auth } from '../firebase'\nimport { v4 } from 'uuid';\nimport firebase from \"firebase/app\";\n\nconst AuthContext = createContext(null)\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport const AuthProvider = ({children}) => {\n    const [currentUser, setCurrentUser] = useState(null); //holds info about current user\n    const [loading, setLoading] = useState(true)\n\n    async function signUp(email, password, meta) {\n        try {\n            const createUserRef = await auth.createUserWithEmailAndPassword(email, password);\n            // Get user UID and make doctor profile\n            const userUid = createUserRef?.user?.uid;\n            const createDoctorProfileRef = await firestore.collection(\"doctors\").doc(userUid).set(meta);\n        } catch(e) {\n            console.log(e);\n            alert(e);\n        }\n\n    }\n\n    async function createInvite() {\n        // Creates inviteId using UUID library\n        var inviteId = v4();\n        inviteId = inviteId.toString().replaceAll(\"-\", \"\");\n        // Sets expiration date\n        var inviteExpiry = new Date(Date.now() + (3600 * 1000 * 24)); // 24 hours \n        const firestoreInvExp = firebase.firestore.Timestamp.fromDate(inviteExpiry);\n        try {\n            const doctorId = currentUser.uid;\n\n            await firestore.collection(\"invites\").doc(inviteId).set({\n                doctorId: doctorId,\n                validUntil: firestoreInvExp\n            });\n\n        } catch (e) {\n            console.log(e);\n            alert(e);\n        }\n        return inviteId;\n    }\n\n    async function pullAlerts() {\n        const tempData = [];\n        const patientCollection = await firestore.collection(\"patients\")\n        const alerts = patientCollection.get().then((querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                patientCollection.doc(doc.id).collection(\"notificationHistory\").get().then((querySnapshot) => {\n                    querySnapshot.forEach((notif) => {\n                        var alertDate = new Date(notif.data().notificationTime.seconds * 1000);\n                        alertDate = alertDate.toString();\n                        tempData.push(\n                            {\n                                alert: notif.data().notificationTitle,\n                                givenName: doc.data().givenName,\n                                surName: doc.data().familyName,\n                                id: doc.id,\n                                time: alertDate.substring(0, 15) + \" at \" + alertDate.substring(16, 21) + \" Hours\"\n                            });\n                    });\n                });\n            });\n        });\n        return tempData;\n    }\n\n    function login(email, password) {\n        return auth.signInWithEmailAndPassword(email, password);\n    }\n\n    function logout() {\n        return auth.signOut();\n    }\n\n    function updateDisplayName(displayName) {\n        return currentUser.updateProfile({displayName});\n    }\n\n    function updatePassword(password) {\n        return currentUser.updatePassword(password);\n    }\n\n    function sendPasswordResetEmail(email) {\n        return auth.sendPasswordResetEmail(email);\n    }\n\n    const value = {\n        currentUser,\n        signUp,\n        createInvite,\n        pullAlerts,\n        login,\n        logout,\n        updateDisplayName,\n        updatePassword,\n        sendPasswordResetEmail\n    }\n\n    useEffect(()=>{\n        // Callback that will automatically setUser when user state changes (e.g. user logs in)\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            // Firebase will automatically search through\n            // localStorage to see if you have the right tokens\n            // to automatically login.\n            // Do not render sign up form while this async process is occurring\n            setLoading(false);\n        })\n\n        return unsubscribe;  // auth.onAuthStateChanged(...) returns an unsubscribe method\n    },[]);\n\n    return (\n        <AuthContext.Provider  value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    )\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport { makeStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport {useAuth} from \"../contexts/AuthContext\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme)=>({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        backgroundColor: \"#6200EE\",\n        fontWeight: \"bold\"\n    },\n    icon: {\n      marginRight: \"0.8rem\",\n      color: \"red\"\n    }\n}\n))\n\nexport const Navbar = () => {\n    const classes = useStyles();\n    const { logout } = useAuth();\n\n    return (\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Grid\n                justify=\"space-between\" // Add it here :)\n                container >\n            <Typography variant=\"h6\" noWrap>\n              Dashboard\n            </Typography>\n            <Box display=\"flex\" alignItems=\"center\">\n              <FavoriteIcon className={classes.icon}/>\n              <Typography variant=\"h6\" noWrap onClick={logout}>\n                Heartsight\n              </Typography>\n            </Box>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    )\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport AccessibilityIcon from \"@material-ui/icons/Accessibility\";\nimport RecentActorsIcon from \"@material-ui/icons/RecentActors\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport SystemUpdateAltIcon from \"@material-ui/icons/SystemUpdateAlt\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: \"auto\",\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\nexport const NavDrawer = () => {\n    const classes = useStyles();\n    const [patientOpen, setPatientOpen] = React.useState(true);\n    const [profileOpen, setProfileOpen] = React.useState(true);\n    return (\n        <Drawer\n            className={classes.drawer}\n            variant=\"permanent\"\n            classes={{\n                paper: classes.drawerPaper,\n            }}\n        >\n            <Toolbar />\n            <div className={classes.drawerContainer}>\n                <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\n                    {/* <ListItem button component={Link} to=\"/\">\n                        <ListItemIcon>\n                            <DashboardIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Dashboard\" />\n                    </ListItem> */}\n                    <ListItem button onClick={() => setPatientOpen(!patientOpen)}>\n                        <ListItemIcon>\n                            <AccessibilityIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Patients\" />\n                        {patientOpen ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse in={patientOpen} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem\n                                button\n                                component={Link}\n                                to=\"/patients\"\n                                className={classes.nested}\n                            >\n                                <ListItemIcon>\n                                    <RecentActorsIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"My Patients\" />\n                            </ListItem>\n                        </List>\n                        <List component=\"div\" disablePadding>\n                            <ListItem\n                                button\n                                component={Link}\n                                to=\"/patient/add\"\n                                className={classes.nested}\n                            >\n                                <ListItemIcon>\n                                    <GroupAddIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Add Patients\" />\n                            </ListItem>\n                        </List>\n                        <List component=\"div\" disablePadding>\n                            <ListItem\n                                button\n                                component={Link}\n                                to=\"/patient/alerts\"\n                                className={classes.nested}\n                            >\n                                <ListItemIcon>\n                                    <NotificationsIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Alerts\" />\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                    <ListItem\n                        button\n                        onClick={() => setProfileOpen(!profileOpen)}\n                        component={Link}\n                        to=\"/profile\"\n                    >\n                        <ListItemIcon>\n                            <LocalHospitalIcon />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Doctor\" />\n                        {profileOpen ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse in={profileOpen} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            <ListItem\n                                button\n                                component={Link}\n                                to=\"/doctor/profile\"\n                                className={classes.nested}\n                            >\n                                <ListItemIcon>\n                                    <AccountBoxIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"View Profile\" />\n                            </ListItem>\n                        </List>\n                    </Collapse>\n                </List>\n            </div>\n        </Drawer>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function BasicTable({ header, rows, onClick }) {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const onRowClick = (row) => {\n    history.push({ pathname: \"/patients/patient\", state: row });\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            {header.map((column) => (\n              <TableCell key={column.field} align=\"center\" variant=\"head\">\n                <Typography style={{ fontWeight: 600 }}>\n                  {column.title}\n                </Typography>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, key) => {\n            return (\n              <TableRow\n                key={key}\n                onClick={onClick ? () => onRowClick(row) : null}\n                hover={true}\n              >\n                {header.map((column) => (\n                  <TableCell key={column.field} align=\"center\">\n                    {row[column.field]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","const heartrate = [];\nfor (let i = 0; i < 100; i++) {\n  const value = Math.round(120 - Math.random() * 40);\n  heartrate.push(value);\n}\n\nexport default heartrate;\n","import React, { useEffect, useState } from \"react\";\nimport Table from \"../../Table\";\nimport { firestore } from \"../../../firebase\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\n\nconst PatientLister = () => {\n  const header = [\n    { field: \"givenName\", title: \"Given Name\" },\n    { field: \"familyName\", title: \"Family Name\" },\n    { field: \"dateOfBirth\", title: \"Date of Birth\" },\n  ];\n\n  const [tableData, setTableData] = useState([]);\n\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    const tempData = [];\n    firestore\n      .collection(`/doctors/${currentUser.uid}/linkedPatients`)\n      .get()\n      .then((querySnapshot) => {\n          console.log(querySnapshot)\n        querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          //console.log(doc.id, \" => \", doc.data());\n          let currentPatient = {...doc.data(), id:doc.id}\n          currentPatient.dateOfBirth = currentPatient.dateOfBirth.toDate().toISOString().substring(0, 10)\n          tempData.push(currentPatient);\n        //   console.log(doc.id, \" => \", doc.data())\n        });\n        setTableData(tempData);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <h1>My Patients</h1>\n      <Table header={header} rows={tableData} onClick={true} />\n    </>\n  );\n};\n\nexport default PatientLister;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\"\nimport { CircularProgress } from \"@material-ui/core\"\nimport QRCode from 'qrcode';\nimport { useEffect, useState } from \"react\";\nimport { useAuth, createInvite } from \"../../../contexts/AuthContext\";\nimport { firestore } from \"../../../firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  root: {\n    display: 'flex',\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    paddingTop: \"-64px\"\n  },\n  header: {\n    textAlign: \"center\",\n    fontSize: \"3rem\"\n  },\n  qrCode: {\n    width: \"18rem\"\n  },\n  sub: {\n    fontSize: \"1.75rem\"\n  },\n  spinner: {\n    height: \"60px\",\n    width: \"60px\"\n  }\n}));\n\nconst PatientAdd = () => {\n    const classes = useStyles();\n    const { currentUser, createInvite } = useAuth();\n    const [src, setSrc] = useState('');\n\n    useEffect(async () => {\n        // Retrieve doctorId and inviteId \n        const inviteId = await createInvite();\n        const doctorId = currentUser.uid;\n        const doctorIdDoc = await firestore.collection(\"doctors\").doc(doctorId).get();\n        const doctorIdData = doctorIdDoc.data();\n\n        const qrtext = `${inviteId}-${doctorId}`;\n        QRCode.toDataURL(qrtext).then(setSrc);\n    }, [])\n\n\n    return (\n        <div className={classes.root}>\n            <h1 className={classes.header}>\n                Patient Link QR Code\n      </h1>\n            <img className={classes.qrCode} src={src} >\n            </img>\n            <p className={classes.sub}>Waiting for a patient to scan the code...</p>\n            <CircularProgress className={classes.spinner} color=\"secondary\" />\n        </div>\n  )\n};\n\nexport default PatientAdd;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport { TextField, Paper } from \"@material-ui/core\";\n\nexport const UpdateProfileForm = (props) => {\n    return (\n        <form id={props.formId} className={props.classes.form} noValidate onSubmit={props.handleSubmitWithCleanup}>\n\n            <Grid container spacing={1}>\n                <Grid item xs={6}>\n                    <Typography >\n                        Given Name:\n\n                    </Typography>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        onChange={props.handleInputChange}\n                        value={props.inputs.givenName}\n                        name=\"givenName\"\n                        className={props.classes.textfield}\n                        variant=\"outlined\"\n                        id=\"givenName\"\n                        autoComplete=\"givenName\"\n                        fullWidth\n                        size=\"small\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography>\n                        Family Name:\n\n                    </Typography>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n\n                        required\n\n                        onChange={props.handleInputChange}\n                        value={props.inputs.familyName}\n                        fullWidth\n                        size=\"small\"\n                        name=\"familyName\"\n                        className={props.classes.textfield}\n                        variant=\"outlined\"\n                        id=\"familyName\"\n                        autoComplete=\"familyName\"\n\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography>\n                        Date of Birth:\n\n                    </Typography>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        fullWidth\n                        size=\"small\"\n                        onChange={props.handleInputChange}\n                        value={props.inputs.dob}\n                        name=\"dob\"\n                        type=\"date\"\n                        className={props.classes.textfield}\n                        variant=\"outlined\"\n                        id=\"dob\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Typography>\n                        Gender:\n\n                    </Typography>\n\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        onChange={props.handleInputChange}\n                        value={props.inputs.gender}\n                        fullWidth\n                        size=\"small\"\n                        name=\"gender\"\n                        className={props.classes.textfield}\n                        variant=\"outlined\"\n                        id=\"gender\"\n                        autoComplete=\"gender\"\n\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n\n                </Grid>\n\n\n\n                <Grid item xs={6}>\n                    <Typography>\n                        Place of Practice:\n\n                    </Typography>\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        required\n                        onChange={props.handleInputChange}\n                        value={props.inputs.placeOfPractice}\n                        fullWidth\n                        size=\"small\"\n                        name=\"placeOfPractice\"\n                        className={props.classes.placeOfPractice}\n                        variant=\"outlined\"\n                        id=\"placeOfPractice\"\n                        autoComplete=\"placeOfPractice\"\n\n                        InputLabelProps={{\n                            shrink: true,\n                        }} />\n                </Grid>\n\n            </Grid>\n        </form>\n    );\n};\n","import React, {useState} from 'react';\r\n\r\nconst useForm = (callback) => {\r\n\tconst [inputs, setInputs] = useState({});\r\n\tconst handleSubmit = (event) => {\r\n\t\tif (event) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\treturn callback();\r\n\t}\r\n\tconst handleInputChange = (event) => {\r\n\t\tconsole.log(inputs);\r\n\t\tevent.persist();\r\n\t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.value}));\r\n\t}\r\n\tconst handleCheckboxChange = (event) => {\r\n\t\tconsole.log(inputs);\r\n\t\tevent.persist();\r\n\t\tsetInputs(inputs => ({...inputs, [event.target.name]: event.target.checked}));\r\n\t}\r\n\treturn {\r\n\t\thandleSubmit,\r\n\t\thandleInputChange,\r\n\t\thandleCheckboxChange,\r\n\t\tinputs,\r\n        setInputs\r\n\t};\r\n}\r\nexport default useForm;\r\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Button, Paper, Fade, Grid } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { firestore } from \"../../../firebase\";\nimport { UpdateProfileForm } from \"./UpdateProfileForm\";\nimport useForm from \"../../../hooks/useForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst FORM_ID = \"updateProfileForm\";\n\nconst DoctorProfile = (props) => {\n    const location = useLocation();\n\n    const { currentUser } = useAuth();\n\n    const classes = useStyles();\n\n    // Start with empty doctor profile with no info\n    const [doctorProfileInfo, setDoctorProfileInfo] = useState({});\n\n    const [error, setError] = useState('');\n\n    // flag to signal when edit page is shown\n    const [editMode, setEditMode] = useState(false);\n\n    // callback function for form submission\n    const updateProfile = async () => {\n        try {\n            // fetch doctor profile from firestore\n            await firestore.collection(\"doctors\").doc(currentUser.uid).set({\n                givenName: updateProfileInputs.givenName,\n                familyName: updateProfileInputs.familyName,\n                email: updateProfileInputs.email,\n                dob: new Date(updateProfileInputs.dob),\n                gender: updateProfileInputs.gender,\n                placeOfPractice: updateProfileInputs.placeOfPractice\n            });\n\n            setDoctorProfileInfo({\n                givenName: updateProfileInputs.givenName,\n                familyName: updateProfileInputs.familyName,\n                email: updateProfileInputs.email,\n                dob: updateProfileInputs.dob,\n                gender: updateProfileInputs.gender,\n                placeOfPractice: updateProfileInputs.placeOfPractice\n            });\n\n            // change back to view doctor profile\n            setEditMode(false);\n\n        } catch (e) {\n            console.log(e);\n            alert(`Update failed: ${e}`);\n        }\n    }\n\n    const {\n        setInputs: setUpdateProfileInputs,\n        inputs: updateProfileInputs,\n        handleInputChange: updateProfileHandleInputChange,\n        handleCheckboxChange: updateProfileHandleCheckboxChange,\n        handleSubmit: updateProfileHandleSubmit\n    } = useForm(updateProfile);\n\n    // On component mount/unmount, retrieve user information from firebase and set to empty doctor profile\n    useEffect(async () => {\n        // Retrieve user information using currentUser\n        const userDataDoc = await firestore.collection(\"doctors\").doc(currentUser.uid).get();\n        console.log(userDataDoc)\n        const userData = userDataDoc.data();\n        console.log(userData)\n        setDoctorProfileInfo({\n            givenName: userData.givenName,\n            familyName: userData.familyName,\n            dob: userData.dob.toDate().toISOString().substring(0, 10),\n            email: userData.email,\n            gender: userData.gender,\n            placeOfPractice: userData.placeOfPractice\n        });\n    }, []);\n\n\n    // Fields for display profile table\n    const fields = [\n        { field: \"givenName\", title: \"Given Name\" },\n        { field: \"familyName\", title: \"Family Name\" },\n        { field: \"dob\", title: \"Date of Birth\" },\n        { field: \"gender\", title: \"Gender\" },\n        { field: \"placeOfPractice\", title: \"Place of Practice\" }\n    ];\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={2}>\n                        <Paper className={classes.paper}>\n                            <AccountCircleIcon fontSize=\"large\" />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} >\n                                    <Typography variant=\"h5\" display=\"inline\" style={{ float: \"left\" }}>Doctor</Typography>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    <Typography display=\"inline\" style={{ float: \"left\" }}>\n                                        {doctorProfileInfo[\"givenName\"]} {doctorProfileInfo[\"familyName\"]}\n                                    </Typography>\n\n                                </Grid>\n                                <Grid>\n                                    <Typography display=\"inline\" style={{ float: \"left\" }}>\n                                        {doctorProfileInfo[\"email\"]}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    {editMode ? <EditProfileButtons\n                                        classes={classes}\n                                        onClick={() => setEditMode(false)} /> :\n                                        <UpdateProfileButton\n                                            onClick={() => {\n                                                setEditMode(true)\n                                                setUpdateProfileInputs(doctorProfileInfo)\n                                            }} />}\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            {editMode ? <UpdateProfileForm\n                                classes={classes}\n                                handleSubmitWithCleanup={updateProfileHandleSubmit}\n                                handleInputChange={updateProfileHandleInputChange}\n                                handleCheckboxChange={updateProfileHandleCheckboxChange}\n                                inputs={updateProfileInputs}\n                                setError={setError}\n                                formId={FORM_ID} /> :\n                                <ProfileTable\n                                    fields={fields}\n                                    doctorProfileInfo={doctorProfileInfo} />}\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n};\n\nconst ProfileTable = (props) => {\n    return <Grid container spacing={3}>\n        {props.fields.map((field, key) => (\n            <><Grid key={key} item xs={6}>\n                <Typography>\n                    {field.title}:\n                </Typography>\n            </Grid>\n                <Grid key={key} item xs={6}>\n                    <Typography align=\"left\">\n                        {props.doctorProfileInfo[field.field]}\n                    </Typography>\n                </Grid></>\n\n\n        ))}\n    </Grid>;\n}\n\nconst UpdateProfileButton = (props) => {\n    return <Button\n        onClick={props.onClick}\n        display=\"inline\" style={{\n            float: \"left\", backgroundColor: \"#6200EE\",\n            color: \"#FFFFFF\",\n        }}>\n        Edit Profile\n    </Button>;\n}\n\nconst EditProfileButtons = (props) => {\n    return <div style={{ float: \"right\" }}><Button\n        onClick={props.onClick}\n    >\n        Cancel\n    </Button>\n        <Button\n            type=\"submit\"\n            form={FORM_ID}\n            style={{\n                backgroundColor: \"#6200EE\",\n                color: \"#FFFFFF\",\n            }}\n            variant=\"contained\"\n            className={props.classes.submit}\n        >\n            Save\n        </Button></div>\n}\n\nexport default DoctorProfile;","import { ResponsiveLine } from \"@nivo/line\";\nimport { Typography } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { firestore } from \"../../../firebase\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport moment from \"moment\";\n\nconst ECGLineGraph = ({ title, patientData }) => {\n  // Storing the date\n  const [readings, setReadings] = useState([]);\n  const [readingIndex, setReadingIndex] = useState(0);\n  const [dateOfReadings, setDateOfReadings] = useState();\n\n  // useEffect hook -> Firebase query given the date for the patient\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(async () => {\n    console.log(\"Loading ECG data\");\n    let start = new Date(\"2021-10-9\");\n    let end = new Date();\n    let tempReadings = [];\n\n    // Retrieve readings for the date given\n    const readingsSnapshot = await firestore\n      .collection(\"patients\")\n      .doc(patientData.id)\n      .collection(\"ecgReadings\")\n      .orderBy(\"startTime\", \"desc\")\n      .limit(20)\n      .get();\n\n    readingsSnapshot.forEach((rd) => {\n      // Retrieve data packet consisting of metadata and readings\n      const dataPacket = rd.data();\n      if (\n        dataPacket.startTime.toDate() > start &&\n        dataPacket.startTime.toDate() < end\n      ) {\n        const convertedReadings = dataPacket.data.map((obj) => {\n          return {\n            x: new Date(obj.time),\n            y: obj.value,\n            key: new Date(obj.time),\n          };\n        });\n        const reformedDataPacket = {\n          startTime: dataPacket.startTime.toDate(),\n          data: convertedReadings,\n          patientId: dataPacket.patientId,\n        };\n        tempReadings.push(reformedDataPacket);\n      }\n    });\n    // Sort results by startDate\n    // tempReadings.sort(function (a, b) {\n    //   return a.startTime - b.startTime;\n    // });\n\n    setReadings(tempReadings);\n  }, []);\n\n  const combineReadings = () => {\n    let convertedReadings = [];\n\n    if (readingIndex !== -1) {\n      convertedReadings = convertedReadings.concat(readings[readingIndex].data);\n    } else {\n      readings.forEach((minuteReadings) => {\n        convertedReadings = convertedReadings.concat(minuteReadings.data);\n      });\n    }\n\n    const currentReadings = [\n      { color: \"hsl(29, 70%, 50%)\", data: convertedReadings },\n    ];\n    return currentReadings;\n  };\n\n  const formatDate = (date) => {\n    return moment(date).format(\"HH:mm:ss:SSS\");\n  };\n\n  const getXAxes = () => {\n    let xAxes = [];\n\n    if (readingIndex !== -1) {\n      console.log(\"Readings\", readings[readingIndex].data);\n      xAxes = xAxes.concat(\n        readings[readingIndex].data.map((r) => formatDate(r.x))\n      );\n    } else {\n      readings.forEach((minuteReadings) => {\n        xAxes = xAxes.concat(minuteReadings.data.map((r) => formatDate(r.x)));\n      });\n    }\n\n    return xAxes;\n  };\n\n  return readings.length > 0 ? (\n    <>\n      <Typography variant=\"h5\" style={{ marginTop: 10 }}>\n        {title}\n      </Typography>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">Data Packet</InputLabel>\n        <Select\n          labelId=\"demo-simple-se lect-label\"\n          id=\"demo-simple-select\"\n          value={readingIndex}\n          label=\"Data Packet\"\n          onChange={(e) => {\n            setReadingIndex(e.target.value);\n          }}\n        >\n          {/* <MenuItem value={-1} key={-1}>\n            ALL READINGS\n          </MenuItem> */}\n          {readings.map((reading, index) => {\n            return (\n              <MenuItem value={index} key={index}>\n                {reading.startTime.toString()}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      <ResponsiveLine\n        data={combineReadings()}\n        margin={{ top: 20, right: 50, bottom: 50, left: 60 }}\n        xScale={{\n          type: \"time\",\n          precision: \"millisecond\",\n        }}\n        yScale={{\n          type: \"linear\",\n          min: \"auto\",\n          max: \"auto\",\n          stacked: true,\n          reverse: false,\n        }}\n        axisTop={null}\n        axisRight={null}\n        axisBottom={null}\n        yFormat=\" >-.2f\"\n        axisBottom={{\n          orient: \"bottom\",\n          tickValues: 10,\n          legend: \"Timestamp\",\n          format: \"%H:%M:%S\",\n        }}\n        axisLeft={{\n          orient: \"left\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: title,\n          legendOffset: -50,\n          legendPosition: \"middle\",\n        }}\n        pointSize={10}\n        pointColor={{ theme: \"background\" }}\n        pointBorderWidth={2}\n        pointBorderColor={{ from: \"serieColor\" }}\n        pointLabelYOffset={-12}\n        useMesh={true}\n        legends={[]}\n      />\n    </>\n  ) : (\n    <CircularProgress />\n  );\n};\n\nexport default ECGLineGraph;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { DialogTitle } from \"@material-ui/core\";\nimport ECGLineGraph from \"./ECGLineGraph\";\nimport dummyECGData from \"../../../dummyData/dummyECGData\";\nimport dummyHeartRate from \"../../../dummyData/dummyHeartRate\";\nimport Table from \"../../Table\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n      style={{\n        height: 500,\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        padding: 20,\n      }}\n    >\n      {/* {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )} */}\n      {children}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function PatientTabs({ headers, patientData }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const alertHeader = [\n    { field: \"alertType\", title: \"Alert Type\" },\n    { field: \"date\", title: \"Alert Date \" },\n  ];\n  const alertData = [\n    { alertType: \"High Heart Rate\", date: \"01-04-2021\" },\n    { alertType: \"Unusual ECG Pattern\", date: \"05-04-2021\" },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          style={{ backgroundColor: \"#6200EE\" }}\n        >\n          {headers.map((title, key) => (\n            <Tab key={key} label={title} {...a11yProps(key)} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Table header={alertHeader} rows={alertData} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ECGLineGraph title=\"ECG Reading\" patientData={patientData} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Tabs from \"../patient/PatientTabs\";\nimport { useLocation } from \"react-router-dom\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { firestore } from \"../../../firebase\";\nimport useForm from \"../../../hooks/useForm\";\nimport { Link } from \"react-router-dom\";\nimport { UpdateProfileForm } from \"./UpdateProfileForm\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst getDoctorProfileInfoQuery = (currentUser) => {\n\n}\n\nconst FORM_ID = \"updateProfileForm\";\n\n\nconst DoctorProfile = (props) => {\n    const location = useLocation();\n\n    const { currentUser } = useAuth();\n\n    const classes = useStyles();\n\n    const [error, setError] = useState('');\n    // callback function for form submission\n    const updateProfile = async () => {\n        await firestore.collection(\"doctors\").doc(currentUser.uid).set({\n            givenName: updateProfileInputs.givenName,\n            familyName: updateProfileInputs.familyName,\n            email: updateProfileInputs.email,\n            dob: new Date(updateProfileInputs.dob),\n            gender: updateProfileInputs.gender,\n            placeOfPractice: updateProfileInputs.placeOfPractice\n        });\n        alert(`User profile successfully updated`);\n    }\n\n    const {\n        setInputs: setUpdateProfileInputs,\n        inputs: updateProfileInputs,\n        handleInputChange: updateProfileHandleInputChange,\n        handleCheckboxChange: updateProfileHandleCheckboxChange,\n        handleSubmit: updateProfileHandleSubmit\n    } = useForm(updateProfile);\n\n    const [initialDoctorProfile, setInitialDoctorProfile] = useState({});\n\n    // On component mount/unmount, retrieve user information from firebase and set to empty doctor profile\n    useEffect(async () => {\n        // Retrieve user information using currentUser\n        const userDataDoc = await firestore.collection(\"doctors\").doc(currentUser.uid).get();\n        console.log(userDataDoc);\n        const userData = userDataDoc.data();\n        console.log(userData);\n        setInitialDoctorProfile({\n            givenName: userData.givenName,\n            familyName: userData.familyName,\n            dob: userData.dob.toDate().toISOString().substring(0, 10),\n            email: userData.email,\n            gender: userData.gender,\n            placeOfPractice: userData.placeOfPractice\n\n        });\n        setUpdateProfileInputs({\n            givenName: userData.givenName,\n            familyName: userData.familyName,\n            dob: userData.dob.toDate().toISOString().substring(0, 10),\n            email: userData.email,\n            gender: userData.gender,\n            placeOfPractice: userData.placeOfPractice\n\n        });\n    }, []);\n\n\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={2}>\n                        <Paper className={classes.paper}>\n                            <AccountCircleIcon fontSize=\"large\" />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} >\n                                    <Typography variant=\"h5\" display=\"inline\" style={{ float: \"left\" }}>Doctor</Typography>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    {initialDoctorProfile && <Typography display=\"inline\" style={{ float: \"left\" }}>\n                                        {initialDoctorProfile[\"givenName\"]} {initialDoctorProfile[\"familyName\"]}\n                                    </Typography>}\n\n                                </Grid>\n                                <Grid item xs={12} >\n                                    <Button\n                                        button\n                                        component={Link}\n                                        to=\"/doctor/profile\"\n                                    >\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        form={FORM_ID}\n                                        style={{\n                                            backgroundColor: \"#5784FF\",\n                                            color: \"#FFFFFF\",\n                                        }}\n                                        variant=\"contained\"\n                                        className={classes.submit}\n                                    >\n                                        Save\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={5} justify=\"center\">\n\n                                <UpdateProfileForm\n                                    classes={classes}\n                                    handleSubmitWithCleanup={updateProfileHandleSubmit}\n                                    handleInputChange={updateProfileHandleInputChange}\n                                    handleCheckboxChange={updateProfileHandleCheckboxChange}\n                                    inputs={updateProfileInputs}\n                                    setError={setError}\n                                    formId={FORM_ID}\n\n                                />\n\n\n\n\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n\n    );\n};\n\n\n\n\nexport default DoctorProfile;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n// import dummyData from \"../dummyData/dummyAlertData\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  TableCell: {\n    color: 'red',\n  }\n});\n\nexport default function BasicTable({ header, rows }) {\n//   const history = useHistory();\n  const classes = useStyles();\n  // const onRowClick = (row) => {\n  //   history.push({ pathname: \"/patients/patient\", state: row });\n  // };\n\n  return (\n  <>\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\"></Table>\n      {/* TODO: Recent alerts no. since last time opened} */}\n      <TableBody>\n        {rows.map((row, key) => {\n          return (\n            <TableRow\n              key={key}\n              // onClick={onClick ? () => onRowClick(row) : null}\n              hover={true}\n            >\n              {header.map((column) => (\n                <TableCell key={column.field} align=\"center\">\n                  {row[column.field]}\n                </TableCell>\n              ))}\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </TableContainer>\n  </>\n  );\n};","import React from \"react\";\nimport Table from \"../../PatientAlertsTable\";\nimport { useAuth, pullAlerts } from \"../../../contexts/AuthContext\";\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { firestore } from \"../../../firebase\";\nimport dummyData from \"../../../dummyData/dummyAlertData\";\nimport TextField from '@mui/material/TextField';\n\nfunction timeout(delay: number) {\n    return new Promise(res => setTimeout(res, delay));\n}\n\nconst PatientAlerts = () => {\n  const header = [\n    { field: \"alert\" },\n    { field: \"givenName\" },\n    { field: \"surName\" },\n    { field: \"id\" },\n    { field: \"time\" },\n  ];\n\n  const [tableData, setTableData] = useState([]);\n  const { pullAlerts } = useAuth();\n  var alerts;\n  useEffect(async () => {\n    alerts = await pullAlerts();\n    // [HERE] : alerts contains AlertData with respect to the format done in dummyAlertData.js\n    await timeout(1000); // Value in milliseconds\n    setTableData(alerts);\n  }, []);\n\n  return (\n    <>\n      <h1>Alerts</h1>\n      <Table header={header} rows={tableData} onClick={true} />\n    </>\n  );\n};\n\n<TextField\n    margin=\"normal\"\n    required\n    fullWidth\n    name=\"historyDate\"\n    type=\"date\"\n    // className={classes.textfield}\n    variant=\"outlined\"\n    id=\"historyDate\"\n    InputLabelProps={{\n        shrink: true,\n}}\n/>\nexport default PatientAlerts","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Typography, Button } from \"@material-ui/core\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PatientTabs from \"./PatientTabs\";\nimport { useLocation } from \"react-router-dom\";\nimport { firestore } from \"../../../firebase\";\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase/app\";\nimport { useEffect, useState } from \"react\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        height: \"100%\",\n    },\n}));\n\nconst PatientLister = (props) => {\n    const location = useLocation();\n\n    // This is the patient data\n    const data = location.state;\n  \n    const [patientInfo, setPatientInfo] = useState({});\n    \n    const tabHeadings = [\"Alerts\", \"ECG History\", \"Heartrate\"];\n    const fields = [\n        { field: \"email\", title: \"Email\" },\n        { field: \"height\", title: \"Height (cm)\" },\n        { field: \"gender\", title: \"Gender\" },\n        { field: \"dateOfBirth\", title: \"DOB\" },\n        { field: \"maritalStatus\", title: \"Marital Status\" },\n        { field: \"weight\", title: \"Weight (kg)\" },\n        \n    ];\n    useEffect(async () => {\n        // Retrieve readings for the date given\n        const patientDataDoc = await firestore.collection(\"patients\").doc(data.id).get();\n        console.log(patientDataDoc)\n        const patientData = patientDataDoc.data();\n        console.log(patientData)\n        setPatientInfo({\n            dateOfBirth: patientData.dateOfBirth.toDate().toISOString().substring(0, 10),\n            email: patientData.email,\n            gender: patientData.gender,\n            height: patientData.height,\n            maritalStatus: patientData.maritalStatus,\n            weight: patientData.weight\n        });\n      }, []);\n    \n\n    const classes = useStyles();\n    const { currentUser } = useAuth();\n    const history = useHistory();\n    \n    const unlinkPatient = () =>  {\n        // remove patient from current doctor's patient list \n        firestore.collection(`/doctors/${currentUser.uid}/linkedPatients`).doc(data.id).delete().then(\n            () => {\n                // remove current doctor's id from patient's list\n                let patientRef = firestore.collection(\"/patients\").doc(data.id)\n                patientRef.update({\n                    doctors: firebase.firestore.FieldValue.arrayRemove(currentUser.uid)\n                }).then(() => {\n                    // send user back to patient list page\n                    history.push({ pathname: \"/patients\", state: {} });\n                    console.log(\"deleted\")\n                })\n                        \n            }\n    \n        )     \n\n    };\n    return (\n        <>\n            <div className={classes.root}>\n                <Grid container spacing={3}>\n                    <Grid item xs={2}>\n                        <Paper className={classes.paper}>\n                            <AccountCircleIcon fontSize=\"large\" />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"h5\">Patient</Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography>\n                                        {data[\"givenName\"]} {data[\"familyName\"]}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button\n                                        style={{ backgroundColor: \"red\", color: \"white\" }}\n                                        onClick={() => unlinkPatient()}\n                                    >\n                                        Unlink Patient\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Paper className={classes.paper}>\n                            <Grid container spacing={3} justify=\"center\">\n                                {fields.map((field, key) => (\n                                    <Grid key={key} item xs={6}>\n                                        <Typography>\n                                            {field.title}: {patientInfo[field.field]}\n                                        </Typography>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <div style={{ height: 20 }}></div>\n                <PatientTabs headers={tabHeadings} patientData={data} />\n            </div>\n        </>\n    );\n};\n\nexport default PatientLister;\n","import React from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PatientLister from \"./pages/patient/PatientLister\";\nimport PatientAdd from \"./pages/patient/PatientAdd\";\nimport DoctorProfile from \"./pages/doctor/DoctorProfile\";\nimport DoctorUpdate from \"./pages/doctor/DoctorUpdate\";\nimport DashboardAnalytics from \"./pages/dashboard/DashboardAnayltics\";\nimport { makeStyles } from \"@material-ui/core\";\nimport PatientAlerts from \"./pages/patient/PatientAlerts\";\nimport PatientView from \"./pages/patient/PatientView\";\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport const Canvas = () => {\n  const classes = useStyles();\n\n  return (\n    <main className={classes.content}>\n      <Toolbar />\n      <Switch>\n        <Route exact path=\"/patients\">\n          <PatientLister />\n        </Route>\n        <Route exact path=\"/patients/patient\">\n          <PatientView />\n        </Route>\n        <Route exact path=\"/patient/add\">\n          <PatientAdd />\n        </Route>\n        <Route exact path=\"/patient/alerts\">\n          <PatientAlerts />\n        </Route>\n        <Route exact path=\"/doctor/profile\">\n          <DoctorProfile />\n        </Route>\n        <Route exact path=\"/doctor/profile/update\">\n          <DoctorUpdate />\n        </Route>\n      </Switch>\n    </main>\n  );\n};\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {Navbar} from \"./Navbar\"\nimport {NavDrawer} from \"./NavDrawer\"\nimport {Canvas} from \"./Canvas\"\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    display: \"flex\",\n    height: \"100vh\",\n    overflowY: \"scroll\"\n  }\n}))\nconst Dashboard = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Navbar/>\n      <NavDrawer/>\n      <Canvas/>\n    </div>\n  )\n};\n\nexport default Dashboard;\n","import {Route, Redirect} from 'react-router-dom'\nimport {useAuth} from '../contexts/AuthContext'\n\nexport const PrivateRoute = ({component: Component, ...rest}) => {\n    const {currentUser} = useAuth()\n    return (\n        <Route\n            {...rest}\n            render={props=> {\n               return currentUser ? <Component {...props} /> : <Redirect to='/login'></Redirect>\n            }}>\n        </Route>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/Heartsight_Landing_Image.d63284ed.png\";","import {useState} from \"react\"\nimport {useHistory} from 'react-router-dom'\nimport {useAuth} from \"../../../contexts/AuthContext\"\nimport {Avatar, Button, Checkbox, CssBaseline, FormControlLabel, Grid, Link, Paper, TextField} from \"@material-ui/core\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Alert from '@material-ui/lab/Alert';\nimport useForm from \"../../../hooks/useForm\";\nimport {firestore} from \"../../../firebase\";\nimport Image from \"../../../Heartsight_Landing_Image.png\";\n// Yes this image is freely usable -- \n// Link here: https://images.unsplash.com/photo-1527628173875-3c7bfd28ad78?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1\n\n// TODO: Add diagonal line and Heartsight\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        // background: [\n        //     '-webkit-linear-gradient(rgba(135, 60, 255, 1), rgba(135, 60, 255, 0.0) 0%)',\n        //     '-webkit-linear-gradient(-45deg, rgba(120, 155, 255, 0.9) 45%, rgba(55, 230, 235, 1) 0%)'\n        // ]\n    },\n    image: {\n        height: '100vh',\n        width: '100vw',\n        backgroundImage: `url(${Image})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paperbase: {\n        backgroundColor: \"#6200EE\",\n        color: \"#FFFFFF\",\n    },\n    paper: {\n        margin: theme.spacing(19, 15),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        // marginTop: theme.spacing(1),\n        // color: \"#FFFFFF\",\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    textfield: {\n        backgroundColor: \"#FFFFFF\",\n        color: \"#FFFFFF\",\n        opacity: 1,\n        borderRadius: 5\n    }\n}));\n\nconst LoginForm = (props) => {\n    return (\n        <form className={props.classes.form} noValidate onSubmit={props.handleSubmitWithCleanup}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.email}\n                name=\"email\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"email\"\n                placeholder=\"Enter your email\"\n                autoComplete=\"email\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                margin=\"normal\"\n                fullWidth\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                onChange={props.handleInputChange}\n                required\n                value={props.inputs.password}\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <Grid\n                container\n                // direction=\"row\"\n                // justifyContent=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs>\n                    <FormControlLabel\n                        control={\n                            <Checkbox\n                                name={\"rememberMe\"}\n                                checked={props.inputs.rememberMe}\n                                onChange={props.handleCheckboxChange}\n                                style={{\n                                    color: \"#FFFFFF\",\n                                }}\n                            />\n                        }\n                        label=\"Remember me\"\n                    />\n                </Grid>\n                <Grid\n                    item\n                    styles={{\n                        textAlign: \"right\",\n                    }}\n                >\n                    <Link\n                        href=\"#\"\n                        variant=\"body1\"\n                        style={{\n                            color: \"#FFFFFF\",\n                        }}\n                        onClick={props.showRecoverPassword}\n                    >\n                        Recover Password\n                    </Link>\n                </Grid>\n            </Grid>\n\n\n            <Grid\n                container\n                // direction=\"row\"\n                // justifyContent=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs>\n                    <Link\n                        href=\"#\"\n                        variant=\"body1\"\n                        style={{\n                            color: \"#FFFFFF\",\n                        }}\n                        onClick={props.showSignupForm}\n                    >\n                        Create account\n                    </Link>\n                </Grid>\n                <Grid\n                    item\n                    // styles={{\n                    //     textAlign: \"right\",\n                    // }}\n                >\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        style={{\n                            backgroundColor: \"#5784FF\",\n                            color: \"#FFFFFF\",\n                        }}\n                        variant=\"contained\"\n                        className={props.classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                </Grid>\n\n            </Grid>\n        </form>\n    );\n}\n\nconst SignupForm = (props) => {\n    return (\n        <form className={props.classes.form} noValidate onSubmit={props.handleSubmitWithCleanup}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.givenName}\n                name=\"givenName\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"givenName\"\n                placeholder=\"Enter your given name\"\n                autoComplete=\"givenName\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.familyName}\n                name=\"familyName\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"familyName\"\n                placeholder=\"Enter your family name\"\n                autoComplete=\"familyName\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.email}\n                name=\"email\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"email\"\n                placeholder=\"Enter your email\"\n                autoComplete=\"email\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.dob}\n                name=\"dob\"\n                type=\"date\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"dob\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <TextField\n                margin=\"normal\"\n                fullWidth\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                onChange={props.handleInputChange}\n                required\n                value={props.inputs.password}\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n            <TextField\n                margin=\"normal\"\n                fullWidth\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                onChange={props.handleInputChange}\n                required\n                value={props.inputs.confirmPassword}\n                name=\"confirmPassword\"\n                placeholder=\"Confirm your password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n\n            <Button\n                type=\"submit\"\n                fullWidth\n                style={{\n                    backgroundColor: \"#5784FF\",\n                    color: \"#FFFFFF\",\n                }}\n                variant=\"contained\"\n                className={props.classes.submit}\n            >\n                Create Account\n            </Button>\n\n        </form>\n    );\n}\n\nconst ForgetPasswordForm = (props) => {\n    return (\n        <form className={props.classes.form} noValidate onSubmit={props.sendPwResetEmail}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                onChange={props.handleInputChange}\n                value={props.inputs.email}\n                name=\"email\"\n                className={props.classes.textfield}\n                variant=\"outlined\"\n                id=\"email\"\n                placeholder=\"Enter your email\"\n                autoComplete=\"email\"\n                InputLabelProps={{\n                    shrink: true\n                }}\n            />\n\n            <Button\n                type=\"submit\"\n                fullWidth\n                style={{\n                    backgroundColor: \"#5784FF\",\n                    color: \"#FFFFFF\",\n                }}\n                variant=\"contained\"\n                className={props.classes.submit}\n            >\n                Recover Password\n            </Button>\n        </form>\n    );\n}\n\nexport const Login = () => {\n    const {login, currentUser, sendPasswordResetEmail, signUp } = useAuth();\n    const loginWithCredentials = () => {\n        return login(inputs.email, inputs.password);\n    }\n    const {inputs, handleInputChange,handleCheckboxChange, handleSubmit} = useForm(loginWithCredentials);\n\n    const signUpWithDetails = async () => {\n        try {\n            setError('');\n            await signUp(signUpInputs.email, signUpInputs.password, {\n                givenName: signUpInputs.givenName,\n                familyName: signUpInputs.familyName,\n                email: signUpInputs.email,\n                dob: new Date(signUpInputs.dob)\n            });\n        } catch (e) {\n            /*\n            auth/email-already-in-use\n            Thrown if there already exists an account with the given email address.\n            auth/invalid-email\n            Thrown if the email address is not valid.\n            auth/operation-not-allowed\n            Thrown if email/password accounts are not enabled. Enable email/password accounts in the Firebase Console, under the Auth tab.\n            auth/weak-password\n            Thrown if the password is not strong enough\n             */\n            // Handle Errors here.\n            var errorCode = e.code;\n            var errorMessage = e.message;\n            if (errorCode === 'auth/email-already-in-use') {\n                setError(\"Email already in use.\");\n            } else if (errorCode === \"auth/invalid-email\") {\n                setError(\"An invalid email was used.\");\n            } else if (errorCode === \"auth/weak-password\") {\n                setError(\"Please sign up with a stronger password.\");\n            } else {\n                setError(`Failed to sign up. Error message ${errorMessage}.`);\n            }\n            return;\n        }\n        showLoginForm();\n    }\n    const {\n        inputs: signUpInputs,\n        handleInputChange: signUpHandleInputChange,\n        handleCheckboxChange: signUpHandleCheckboxChange,\n        handleSubmit: signUpHandleSubmit\n    } = useForm(signUpWithDetails);\n\n    const [error, setError] = useState('');\n    const [info, setInfo] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    /*\n        0 = LoginForm\n        1 = ForgetPasswordForm\n        2 = SignupForm\n     */\n    const [formShown, setFormShown] = useState(0);\n\n    const history = useHistory();\n    const classes = useStyles();\n\n    const showLoginForm = () => {\n        setFormShown(0);\n    };\n\n    const showRecoverPassword = () => {\n        setFormShown(1);\n    };\n\n    const showSignupForm = () => {\n        setFormShown(2);\n    }\n\n\n    // Clean up and set loading before attempting to login\n    async function handleSubmitWithCleanup(event) {\n        const cleanUp = () => {setLoading(false)};\n\n        try {\n            setError('');\n            setLoading(true);\n            await handleSubmit(event);\n            // Check that user is logged in.\n            console.log(currentUser);\n\n        } catch(e) {\n            // Handle Errors here.\n            var errorCode = e.code;\n            var errorMessage = e.message;\n            if (errorCode === 'auth/wrong-password') {\n                setError(\"Wrong password\");\n            } else if (errorCode === \"auth/invalid-email\") {\n                setError(\"An invalid email was used.\");\n            } else {\n                setError('Failed to log in. Check if you have used the correct credentials.');\n            }\n            return cleanUp();\n        }\n\n        let res = cleanUp();\n\n        //  Only proceed if user is successfully logged in\n        history.push('/patients');\n        return res;\n    }\n\n    const sendPwResetEmail = async (event) => {\n        event.preventDefault();\n        try {\n            await sendPasswordResetEmail(inputs.email);\n        } catch (e) {\n            // Handle Errors here.\n            var errorCode = e.code;\n            var errorMessage = e.message;\n            if (errorCode === 'auth/wrong-password') {\n                setError(\"Wrong password\");\n            } else if (errorCode === \"auth/invalid-email\") {\n                setError(\"An invalid email was used.\");\n            } else {\n                setError('Failed to log in. Check if you have used the correct credentials.');\n            }\n        }\n        setInfo(\"Your password has been reset. Please check your email.\");\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={false} md={5} className={classes.image} />\n            <Grid item xs={12} sm={12} md={7} component={Paper} elevation={6} square className={classes.paperbase}>\n                <div className={classes.paper}>\n                    {\n                        error && (<Alert severity=\"error\">{error}</Alert>)\n                    }\n\n                    {\n                        info && (<Alert severity=\"info\">{info}</Alert>)\n                    }\n\n                    { formShown === 0 &&\n                        <LoginForm\n                            classes={classes}\n                            handleSubmitWithCleanup={handleSubmitWithCleanup}\n                            handleInputChange={handleInputChange}\n                            handleCheckboxChange={handleCheckboxChange}\n                            inputs={inputs}\n                            showRecoverPassword={showRecoverPassword}\n                            showSignupForm={showSignupForm}\n                        />\n                    }\n\n                    { formShown === 1 &&\n                        <ForgetPasswordForm\n                            classes={classes}\n                            handleSubmitWithCleanup={handleSubmitWithCleanup}\n                            handleInputChange={handleInputChange}\n                            handleCheckboxChange={handleCheckboxChange}\n                            inputs={inputs}\n                            setError={setError}\n                            sendPwResetEmail={sendPwResetEmail}\n                        />\n                    }\n\n                    { formShown === 2 &&\n                        <SignupForm\n                            classes={classes}\n                            handleSubmitWithCleanup={signUpHandleSubmit}\n                            handleInputChange={signUpHandleInputChange}\n                            handleCheckboxChange={signUpHandleCheckboxChange}\n                            inputs={signUpInputs}\n                            setError={setError}\n                        />\n                    }\n\n\n\n                </div>\n            </Grid>\n        </Grid>\n    )\n}\n","import React from \"react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { AuthProvider, useAuth } from \"./contexts/AuthContext\";\nimport { PrivateRoute } from \"./components/PrivateRoute\";\nimport { Login } from \"./components/pages/login/Login\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\"\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  return (\n    <Router>\n      <AuthProvider>\n        <Switch>\n          <Route path=\"/login\" component={Login}/>\n          <PrivateRoute\n            path=\"/\"\n            to=\"/login\"\n            component={Dashboard}\n          />\n        </Switch>\n      </AuthProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}